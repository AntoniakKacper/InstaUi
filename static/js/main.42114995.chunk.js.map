{"version":3,"sources":["components/Navbar.tsx","components/PasswordInput.tsx","components/TextInput.tsx","store/types/types.ts","store/reducers/postReducer.ts","store/reducers/authReducer.ts","store/reducers/userReducer.ts","store/index.ts","utils/axiosInstance.ts","store/actions/authActions.ts","pages/auth/ValidationSchema.ts","pages/auth/SignIn.tsx","pages/auth/SignUp.tsx","components/Modal.tsx","store/actions/postAction.ts","store/actions/userActions.ts","components/Comments.tsx","components/PostDialog.tsx","components/Post.tsx","pages/home/Home.tsx","routes/ProtectedRoute.tsx","routes/PublicRoute.tsx","components/BottomNavbar.tsx","components/DrawerComponent.tsx","components/SimplePostDialog.tsx","components/ProfilePost.tsx","components/ResetPasswordDialog.tsx","pages/profile/EditProfile.tsx","pages/profile/FollowListDialog.tsx","pages/profile/Profile.tsx","pages/search/search.tsx","components/Dropzone.tsx","pages/addPost/PostForm.tsx","pages/addPost/AddPost.tsx","pages/editPost/editPost.tsx","routes/RoutesConfig.tsx","App.tsx","index.tsx"],"names":["Navbar","authenticated","useSelector","state","auth","className","to","fontSize","PasswordInput","label","name","variant","useState","showPassword","setShowPassword","useFormContext","register","errors","formState","TextField","fullWidth","type","color","error","helperText","message","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","style","fill","TextInput","placeholder","SIGN_UP","SIGN_OUT","SIGN_IN_SOCIAL","SET_LOADING","RESET_AUTH","GET_USER_BY_ID","GET_USER_POSTS","LIKE_USER_POST","FOLLOW_USER","SET_AVATAR","SET_NAME","DELETE_POST","SET_LOADING_USER","SET_POSTS","LIKE_POST","ADD_COMMENT","DELETE_POST_COMMENT","DELETE_USER_COMMENT","SET_LOADING_POST","initialState","posts","postLoading","currentPage","hasNextPage","user","token","authLoading","userLoading","persistConfig","key","storage","whitelist","rootReducer","combineReducers","action","payload","map","post","id","avatar_url","userReducer","filter","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","axiosCustom","axios","create","baseURL","process","interceptors","request","use","req","headers","authorization","getState","response","status","dispatch","Promise","reject","signInSocial","passedToken","social","setLoadingAuth","get","params","then","console","log","data","loadingValue","REGEX_PASSWORD","passwordConfirmationValidation","yup","required","min","max","matches","passwordValidation","validationCredentials","email","password","passwordSchema","shape","password_confirmation","signUpSchema","signInSchema","SignIn","useDispatch","methods","useForm","resolver","yupResolver","responseGoogle","accessToken","onSuccess","a","code","clientId","onFailure","buttonText","tag","render","renderProps","disabled","icon","cookiePolicy","scope","onSubmit","handleSubmit","catch","signIn","Button","SignUp","watch","confirmedPassword","signUp","undefined","Modal","open","setOpen","children","scrollType","maxWidth","createPortal","Dialog","onClose","scroll","document","body","setPosts","page","passedPosts","Accept","res","Boolean","next_page_url","current_page","setLoadingPost","likePost","head","likes_count","isLiked","deletePostComment","comment","delete","comments","com","getUserPosts","deleteUserComment","setLoadingUser","Comments","deleteComment","authId","author","content","PostDialog","isOnWall","setComment","anchorEl","setAnchorEl","show","setShow","like","setLike","likesCount","setLikesCount","loading","setLoading","openMenu","toggleLike","likeUserPost","handleCloseMenu","description","img_url","Avatar","alt","src","author_id","event","currentTarget","moment","created_at","format","onChange","target","value","CircularProgress","size","post_id","location","push","addComment","addUserComment","Menu","MenuListProps","MenuItem","deletePost","Post","openPost","setOpenPost","React","useEffect","handleClose","toggle","slice","Home","preventDefault","ProtectedRoute","PublicRoute","BottomNavbar","setValue","ListOfButtons","sx","width","height","BottomNavigation","newValue","button","BottomNavigationAction","component","Link","DrawerComponent","drawerTitle","list","visible","setVisible","Drawer","anchor","Box","role","onKeyDown","SimplePostDialog","ProfilePost","searchActive","comments_count","ResetPasswordDialog","passwordReset","EditProfile","username","setUsername","accept","files","imageCompression","maxWidthOrHeight","useWebWorker","compressedFile","loadedFile","loadedAvatar","FormData","append","_method","newName","changedUsername","FollowListDialog","path","users","setUsers","fetchData","charAt","toUpperCase","Profile","loggedUserId","useParams","openEditProfile","setOpenEditProfile","followOpen","setFollowOpen","setPath","getUserById","Number","handleClick","handleOpen","handleOpenEditProfile","handleFollow","followers_count","isFollowed","followUser","handleFollowOpen","passedPath","followed_count","posts_count","List","ListItem","ListItemIcon","ListItemText","TabPanel","props","index","other","hidden","p","Search","debounced","useDebouncedCallback","searchValue","length","foundUsers","foundPosts","e","startAdornment","borderBottom","borderColor","Tabs","Tab","Dropzone","setFile","useDropzone","onDrop","acceptedFiles","forEach","file","multiple","maxFiles","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","PostForm","setPost","handleChange","photo","URL","createObjectURL","multiline","maxRows","tags","steps","AddPost","activeStep","setActiveStep","setIsOpen","navigate","useNavigate","stepsElements","htmlElement","handleAddPost","fData","options","maxSizeMB","Stepper","alternativeLabel","Step","StepLabel","Typography","mt","mb","display","flexDirection","pt","flex","prevActiveStep","mr","EditPost","useLocation","unmounted","put","RoutesConfig","element","App","ReactDOM","StrictMode","getElementById"],"mappings":"mNAWaA,EAAgC,WAC3C,IAAQC,EAAkBC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,QAA1DH,cACR,OACE,qBAAKI,UAAU,SAAf,SACGJ,EACC,sBAAKI,UAAU,cAAf,UACE,cAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,aAA3B,2BAEA,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,CAAMC,GAAG,WAAT,SAAoB,mBAAGD,UAAU,8BAMrC,sBAAKA,UAAU,cAAf,UACE,mBAAGA,UAAU,aAAb,2BACA,cAAC,IAAD,CAAeE,SAAS,gB,gIChBrBC,EAA8C,SAAC,GAIrD,IAAD,EAHJC,EAGI,EAHJA,MACAC,EAEI,EAFJA,KACAC,EACI,EADJA,QAEA,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAKA,EAGIC,cAFFC,EADF,EACEA,SACaC,EAFf,EAEEC,UAAaD,OAEf,OACE,cAACE,EAAA,EAAD,2BACMH,EAASN,IADf,IAEED,MAAOA,EACPC,KAAMA,EACNU,WAAS,EACTC,KAAMR,EAAe,OAAS,WAC9BS,MAAM,UACNX,QAASA,EACTY,QAASN,EAAOP,GAChBc,WAAYP,EAAOP,GAAP,UAAeO,EAAOP,UAAtB,aAAe,EAAce,QAAU,GACnDC,WAAY,CACVC,aACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAACC,EAAA,EAAD,CAAYC,QAtBP,WACbjB,GAAiBD,IAqBT,SACGA,EACC,cAAC,IAAD,CAAgBmB,MAAO,CAAEC,KAAM,aAE/B,cAAC,IAAD,CAAmBD,MAAO,CAAEC,KAAM,sBChCrCC,EAAsC,SAAC,GAM7C,IAAD,EALJzB,EAKI,EALJA,MACAC,EAII,EAJJA,KACAyB,EAGI,EAHJA,YACAd,EAEI,EAFJA,KACAV,EACI,EADJA,QAEA,EAGII,cAFFC,EADF,EACEA,SACaC,EAFf,EAEEC,UAAaD,OAEf,OACE,cAACE,EAAA,EAAD,2BACMH,EAASN,IADf,IAEED,MAAOA,EACPC,KAAMA,EACNyB,YAAaA,EACbf,WAAS,EACTC,KAAMA,EACNC,MAAM,UACNX,QAASA,EACTY,QAASN,EAAOP,GAChBc,WAAYP,EAAOP,GAAP,UAAeO,EAAOP,UAAtB,aAAe,EAAce,QAAU,O,4CC/B5CW,EAAU,UACVC,EAAW,WACXC,EAAiB,iBACjBC,EAAc,cACdC,EAAa,aAEbC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAiB,iBAEjBC,EAAc,cACdC,EAAa,aACbC,EAAW,WACXC,EAAc,cACdC,EAAmB,mBAGnBC,EAAY,YACZC,EAAY,YACZC,EAAc,cACdC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBCb1BC,GAA0B,CAC5BC,MAAO,KACPC,aAAa,EACbC,YAAa,EACbC,aAAa,GCHJJ,GAA0B,CACnCK,KAAM,KACN3D,eAAe,EACf4D,MAAO,GACPC,aAAa,G,wCCJXP,GAA0B,CAC5BK,KAAM,KACNJ,MAAO,KACPO,aAAa,EACbL,YAAa,EACbC,aAAa,GCRJK,GAAgB,CACzBC,IAAK,OACLC,aACAC,UAAW,CAAC,SAGVC,GAAcC,0BAAgB,CAChCb,MHGW,WAAqD,IAApDrD,EAAmD,uDAA3CoD,GAAce,EAA6B,uCAC/D,OAAOA,EAAOjD,MACV,KAAKiC,EACD,OAAO,2BACAnD,GADP,IAEIsD,YAAaa,EAAOC,UAE5B,KAAKtB,EACD,OAAO,2BACA9C,GADP,IAEIqD,MAAOc,EAAOC,QAAQf,MACtBE,YAAaY,EAAOC,QAAQb,YAC5BC,YAAaW,EAAOC,QAAQZ,YAC5BF,aAAa,IAErB,KAAKP,EACL,KAAKC,EACL,KAAKC,EACD,OAAO,2BACAjD,GADP,IAEIqD,MAAOrD,EAAMqD,MAAOgB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,KAAOJ,EAAOC,QAAQG,GAAKJ,EAAOC,QAAUE,OAEzF,QACI,OAAOtE,IGzBfC,KFGW,WAAqD,IAApDD,EAAmD,uDAA3CoD,GAAce,EAA6B,uCAC/D,OAAOA,EAAOjD,MACV,KAAKkB,EACD,OAAO,2BACApC,GADP,IAEI2D,YAAaQ,EAAOC,UAE5B,KAAKnC,EACD,OAAO,2BACAjC,GADP,IAEIyD,KAAMU,EAAOC,QAAQX,KACrBC,MAAOS,EAAOC,QAAQV,MACtB5D,eAAe,EACf6D,aAAa,IAErB,KAAKtB,EACL,KAAKH,EACD,OAAO,2BACAlC,GADP,IAEI0D,MAAO,GACP5D,eAAe,EACf2D,KAAM,KACNE,aAAa,IAErB,KAAKxB,EACD,OAAO,2BACAnC,GADP,IAEI2D,aAAa,IAErB,KAAKjB,EACD,OAAO,2BACA1C,GADP,IAEIyD,KAAMzD,EAAMyD,MAAN,2BACCzD,EAAMyD,MADP,IAEFe,WAAYL,EAAOC,YAG/B,KAAKzB,EACD,OAAO,2BACA3C,GADP,IAEIyD,KAAMzD,EAAMyD,MAAN,2BACCzD,EAAMyD,MADP,IAEFlD,KAAM4D,EAAOC,YAGzB,QACI,OAAOpE,IEhDfyE,YDGW,WAAoD,IAAnDzE,EAAkD,uDAA1CoD,GAAce,EAA4B,uCAC9D,OAAQA,EAAOjD,MACX,KAAK2B,EACD,kCACO7C,GADP,IAEI4D,YAAaO,EAAOC,UAE5B,KAAK9B,EACD,OAAO,2BACAtC,GADP,IAEIyD,KAAMU,EAAOC,QACbf,MAAOc,EAAOC,QAAQf,MACtBO,aAAa,IAErB,KAAKrB,EACD,OAAO,2BACAvC,GADP,IAEIqD,MAAOc,EAAOC,QAAQf,MACtBE,YAAaY,EAAOC,QAAQb,YAC5BC,YAAaW,EAAOC,QAAQZ,cAEpC,KAAKf,EACD,OAAO,2BACAzC,GADP,IAEIyD,KAAMU,EAAOC,QACbR,aAAa,IAErB,KAAKlB,EACD,OAAO,2BACA1C,GADP,IAEIyD,KAAMzD,EAAMyD,MAAN,2BACCzD,EAAMyD,MADP,IAEFe,WAAYL,EAAOC,UAEvBR,aAAa,IAErB,KAAKhB,EACD,OAAO,2BACA5C,GADP,IAEIqD,MAAOrD,EAAMqD,MAAOqB,QAAO,SAAAJ,GAAI,OAAIA,EAAKC,KAAOJ,EAAOC,WACtDR,aAAa,IAErB,KAAKpB,EACL,KAAKU,EACD,OAAO,2BACAlD,GADP,IAEIqD,MAAOrD,EAAMqD,MAAOgB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,KAAOJ,EAAOC,QAAQG,GAAKJ,EAAOC,QAAUE,OAEzF,QACI,OAAOtE,MCjDb2E,GAAmBC,aAAef,GAAeI,IAEjDY,GAAQC,sBACVH,GACAI,8BAAoBC,0BAAgBC,OAGlCC,GAAYC,aAAaN,ICvBzBO,GAAcC,IAAMC,OAAO,CAC7BC,QAHYC,gDAMhBJ,GAAYK,aAAaC,QAAQC,KAAI,SAAUC,GAE3C,OADAA,EAAIC,QAASC,cAAb,iBAAuCjB,GAAMkB,WAAW9F,KAAKyD,OACtDkC,KAGXR,GAAYK,aAAaO,SAASL,KAAI,SAAUK,GAA0B,OAAOA,KAC9E,SAAU5E,GAIT,OAH6B,MAA1BA,EAAM4E,SAASC,QACdpB,GAAMqB,SAAS,CAAChF,KAAMmB,IAEnB8D,QAAQC,OAAOhF,MAGXgE,UCwDFiB,GAAe,SAACC,EAAqBC,GAC9C,OAAO,SAAAL,GACHA,EAASM,IAAe,IACxB,IACInB,GAAMoB,IAAN,kBAAqBF,EAArB,2BAA8CD,GAC1C,CACII,OAAQ,CACJhD,MAAO4C,KAEZK,MAAK,SAACX,GACLY,QAAQC,IAAIb,GACZ,IAAMvC,EAAOuC,EAASc,KAAKA,KAAKrD,KAC1BC,EAAQsC,EAASc,KAAKA,KAAKpD,MACjCkD,QAAQC,IAAInD,GACZwC,EAAS,CACLhF,KAAMe,EACNmC,QAAS,CACLX,OACAC,WAGZkD,QAAQC,IAAIb,EAASc,KAAKA,SAGlC,MAAO1F,GACHwF,QAAQC,IAAIzF,MA8EXoF,GAAiB,SAACO,GAC3B,OAAO,SAAAb,GACH,IACIA,EAAS,CACLhF,KAAMkB,EACNgC,QAAS2C,IAEf,MAAO3F,GACLwF,QAAQC,IAAIzF,M,SC5LlB4F,GACJ,yEAEIC,GAAiCC,OAElCC,SAAS,wBACTC,IAAI,EAAG,yBACPC,IAAI,GAAI,wBACRC,QAAQN,GAAgB,wCAEvBO,GAAqBL,OAEtBC,SAAS,qCACTC,IAAI,EAAG,yBACPC,IAAI,GAAI,wBACRC,QAAQN,GAAgB,wCAEvBQ,GAAwB,CAC5BC,MAAOP,OAAaO,MAAM,iBAAiBN,SAAS,qBACpDO,SAAUH,IAGCI,GAAiBT,OAAaU,MAAM,CAC/CF,SAAUH,GACVM,sBAAuBZ,KAGZa,GAAeZ,OAAaU,MAAb,2BAAuBJ,IAAvB,IAA+CK,sBAAuBZ,GAChG1G,KAAM2G,OACDC,SAAS,iBACTC,IAAI,EAAG,qBACPC,IAAI,GAAI,uBAGFU,GAAeb,OAAaU,MAAMJ,I,0CCjBlCQ,GAAgC,WACzC,IAAOrE,EAAe5D,aAAY,SAACC,GAAD,OAAqBA,EAAMC,QAAtD0D,YACHQ,EAAS8D,cACTC,EAAUC,YAAoB,CAClCC,SAAUC,YAAYN,MAMlBO,EAAiB,SAACtC,GACtB7B,EAAOkC,GAAaL,EAASuC,YAAa,YAGtCC,EAAS,uCAAG,WAAOxC,GAAP,SAAAyC,EAAA,sDAChBtE,EAAOkC,GAAaL,EAAS0C,KAAM,WADnB,2CAAH,sDAMf,OACE,sBAAKxI,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,wCACA,0EAEF,sBAAKA,UAAU,wBAAf,UACE,cAAC,KAAD,CACIA,UAAU,+BACVyI,SAAUnD,2EACVgD,UAAWF,EACXM,UAAWN,EACXO,WAAW,SACXC,IAAI,SACJC,OAAQ,SAAAC,GAAW,OACf,wBAAQ9I,UAAU,mEACV0B,QAASoH,EAAYpH,QACrBqH,SAAUD,EAAYC,SAF9B,SAGE,mBAAG/I,UAAU,wDAEnBgJ,MAAM,EAENC,aAAc,uBAElB,cAAC,KAAD,CAAaR,SAAUnD,uBACVtF,UAAU,mEACVkJ,MAAO,aACPZ,UAAWA,EACXK,WAAY,mBAAG3I,UAAU,oDACzB0I,UA/BD,SAAC5C,GAAD,OAAmBY,QAAQxF,MAAM4E,SAiC/C,eAAC,IAAD,2BAAkBkC,GAAlB,cACE,uBACEmB,SAAUnB,EAAQoB,cA/CT,SAACxC,GAChB3C,EFOkB,SAAC2C,GACnB,OAAO,SAAAZ,GACHA,EAASM,IAAe,IACxB,IACGnB,GAAMf,KAAK,SAAUwC,GACnBH,MACD,SAACX,GACEY,QAAQC,IAAIb,GAEX,IAAMvC,EAAOuC,EAASc,KAAKA,KAAKrD,KAC1BC,EAAQsC,EAASc,KAAKA,KAAKpD,MAEjCwC,EAAS,CACLhF,KAAMe,EACNmC,QAAS,CACLX,OACAC,cAIV6F,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEnC,MAAOA,GACHwF,QAAQC,IAAIzF,KE9BboI,CAAO1C,OA+CR5G,UAAU,oBAFZ,UAIE,cAAC,EAAD,CACEI,MAAM,QACNC,KAAK,QACLyB,YAAY,kBACZd,KAAK,QACLV,QAAQ,aAEV,cAAC,EAAD,CAAeF,MAAM,WAAWC,KAAK,WAAWC,QAAQ,aACvDmD,EACC,cAAC8F,EAAA,EAAD,CAAQjJ,QAAQ,WAAWW,MAAM,UAAU8H,UAAQ,EAAnD,wBAIA,cAACQ,EAAA,EAAD,CAAQvI,KAAK,SAASV,QAAQ,YAA9B,wBAOJ,sBAAKN,UAAU,eAAf,UACA,wDACA,cAAC,IAAD,CAAMC,GAAG,UAAT,gCClFKuJ,GAAgC,WAC3C,IAAMvF,EAAS8D,cACTC,EAAUC,YAAoB,CAClCC,SAAUC,YAAYP,MAExB,EAAsCI,EAAQyB,MAAM,CAAC,WAAY,0BAAjE,mBAAOjC,EAAP,KAAiBkC,EAAjB,KAIA,OACE,sBAAK1J,UAAU,gBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,2CAGF,cAAC,IAAD,2BAAkBgI,GAAlB,aACE,uBACEmB,SAAUnB,EAAQoB,cAXT,SAACxC,GAChB3C,EHdkB,SAAC2C,GACnB,OAAO,SAAAZ,GACHA,EAASM,IAAe,IACxB,IACGnB,GAAMf,KAAK,aAAcwC,GACvBH,MACD,SAACX,GACD,IAAMvC,EAAOuC,EAASc,KAAKA,KAAKrD,KAC1BC,EAAQsC,EAASc,KAAKA,KAAKpD,MAEjCwC,EAAS,CACLhF,KAAMe,EACNmC,QAAS,CACLX,OACAC,cAGN6F,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEnC,MAAOA,GACHwF,QAAQC,IAAIzF,KGNbyI,CAAO/C,OAWR5G,UAAU,oBAFZ,UAIE,cAAC,EAAD,CACEI,MAAM,WACNC,KAAK,OACLyB,YAAY,WACZd,KAAK,OACLV,QAAQ,aAEV,cAAC,EAAD,CACEF,MAAM,QACNC,KAAK,QACLyB,YAAY,kBACZd,KAAK,QACLV,QAAQ,aAEV,cAAC,EAAD,CAAeF,MAAM,WAAWC,KAAK,WAAWC,QAAQ,aACxD,cAAC,EAAD,CACEF,MAAM,mBACNC,KAAK,wBACLC,QAAQ,kBAEIsJ,IAAbpC,GAA0BA,IAAakC,EAAoB,cAACH,EAAA,EAAD,CAAQvI,KAAK,SAASV,QAAQ,YAA9B,qBAEhD,cAACiJ,EAAA,EAAD,CAAQvI,KAAK,SAASV,QAAQ,YAAYyI,UAAQ,EAAlD,2BAMhB,uBAAM/I,UAAU,eAAhB,UACE,0DACA,cAAC,IAAD,CAAMC,GAAG,UAAUD,UAAU,wBAA7B,4B,uEClDK6J,GAAwB,SAAC,GAAiE,IAA/DC,EAA8D,EAA9DA,KAAMC,EAAwD,EAAxDA,QAASC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,WAAYC,EAAyB,EAAzBA,SAAUnJ,EAAe,EAAfA,UAInF,OAAOoJ,uBACL,cAACC,GAAA,EAAD,CACIN,KAAMA,EACNO,QANc,WAChBN,GAAQ,IAMNO,OAAQL,GAA0B,OAClCjK,UAAU,QACVkK,SAAUA,EACVnJ,UAAWA,EANf,SAQKiJ,IAEJO,SAASC,O,SCfHC,GAAW,SAACC,EAAcC,GACnC,OAAO,SAAA3E,GACH,IAAIb,GAAMoB,IAAI,UAAW,CACjBC,OAAQ,CACJkE,QAEJ/E,QAAS,CACPiF,OAAQ,sBAETnE,MAAK,SAACoE,GAEL,IAAM1H,EAAK,uBAAOwH,GAAP,aAAuBE,EAAIjE,KAAKA,KAAKA,OAC1CtD,EAAcwH,QAAQD,EAAIjE,KAAKA,KAAKmE,eACpC1H,EAAcwH,EAAIjE,KAAKA,KAAKoE,aAClCtE,QAAQC,IAAIrD,GAEZoD,QAAQC,IAAIkE,EAAIjE,KAAKA,KAAKmE,eAC1BrE,QAAQC,IAAIkE,EAAIjE,KAAKA,MACrBZ,EAAS,CACLhF,KAAM4B,EACNsB,QAAS,CACLf,QACAE,cACAC,oBAGT+F,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEtC,MAAOA,GACHwF,QAAQC,IAAIzF,GA3BhB,QA8BI+J,IAAe,MAKdC,GAAW,SAAC9G,GACrB,OAAO,SAAA4B,GACH,IACIb,GAAMgG,KAAN,iBAAqB/G,EAAKC,GAA1B,SAAqC,CACjCsB,QAAS,CACLiF,OAAQ,sBAEbnE,MAAK,WACJrC,EAAKgH,aAAehH,EAAKiH,SAAW,EAAI,EACxCjH,EAAKiH,SAAWjH,EAAKiH,QACrBrF,EAAS,CACLhF,KAAM6B,EACNqB,QAASE,OAEdiF,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEpC,MAAOA,GACHwF,QAAQC,IAAIzF,MA8BXoK,GAAoB,SAAClH,EAAiBmH,GAC/C,OAAO,SAAAvF,GACH,IACIU,QAAQC,IAAI4E,EAAQlH,IACpBc,GAAMqG,OAAN,qBAA2BD,EAAQlH,KACjCoC,MAAK,SAACX,GACJY,QAAQC,IAAIb,GACZ,IAAM2F,EAAWrH,EAAKqH,SAASjH,QAAO,SAACkH,GAAD,OAASA,EAAIrH,KAAOkH,EAAQlH,MAClEqC,QAAQC,IAAI8E,GACZzF,EAAS,CACLhF,KAAM+B,EACNmB,QAAQ,2BACDE,GADA,IAEHqH,kBAGTpC,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEpC,MAAOA,GACHwF,QAAQC,IAAIzF,MAKX+J,GAAiB,SAACpE,GAC3B,OAAO,SAAAb,GACH,IACIA,EAAS,CACLhF,KAAMiC,EACNiB,QAAS2C,IAGjB,MAAO3F,GACHwF,QAAQC,IAAIzF,MC/FXyK,GAAe,SAACtH,EAAYsG,EAA0BD,GAC/D,OAAO,SAAA1E,GACH,IACIb,GAAMoB,IAAN,kBAAqBlC,EAArB,UAAiC,CAC7BmC,OAAO,CACHkE,QAEJ/E,QAAS,CACLiF,OAAQ,sBAEbnE,MAAK,SAACoE,GAEL,IAAM1H,EAAK,uBAAOwH,GAAP,aAAuBE,EAAIjE,KAAKA,KAAKA,OAC1CtD,EAAcwH,QAAQD,EAAIjE,KAAKA,KAAKmE,eACpC1H,EAAcwH,EAAIjE,KAAKA,KAAKoE,aAClChF,EAAS,CACLhF,KAAMqB,EACN6B,QAAS,CACLf,QACAE,cACAC,oBAGT+F,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEpC,MAAOA,GACHwF,QAAQC,IAAIzF,MA+CX0K,GAAoB,SAACxH,EAAiBmH,GAC/C,OAAO,SAAAvF,GACH,IACIb,GAAMqG,OAAN,qBAA2BD,EAAQlH,KACjCoC,MAAK,SAACX,GACJY,QAAQC,IAAIb,GACZ,IAAM2F,EAAWrH,EAAKqH,SAASjH,QAAO,SAACkH,GAAD,OAASA,EAAIrH,KAAOkH,EAAQlH,MAClE2B,EAAS,CACLhF,KAAMgC,EACNkB,QAAQ,2BACDE,GADA,IAEHqH,kBAGTpC,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEpC,MAAOA,GACHwF,QAAQC,IAAIzF,MAoDX2K,GAAiB,SAAChF,GAC3B,OAAO,SAAAb,GACH,IACIA,EAAS,CACLhF,KAAM2B,EACNuB,QAAS2C,IAGjB,MAAO3F,GACHwF,QAAQC,IAAIzF,M,UC7KX4K,GAAoC,SAAC,GAAoC,IAAnCP,EAAkC,EAAlCA,QAASnH,EAAyB,EAAzBA,KAAM2H,EAAmB,EAAnBA,cACxDC,EAASnM,aAAY,SAACC,GAAD,uBAAsBA,EAAMC,KAAKwD,YAAjC,aAAsB,EAAiBc,MAC5DJ,EAAS8D,cAMf,OACI,sBAAsB/H,UAAU,gBAAhC,UACI,8BACI,cAAC,IAAD,CAAMC,GAAE,mBAAcmE,EAAKC,IAAMrE,UAAU,iBAA3C,SAA6DuL,EAAQU,OAAO5L,OAAakL,EAAQW,WAEpGX,EAAQU,OAAO5H,KAAO2H,EAAS,mBAAGhM,UAAU,wBAAwB0B,QATjD,WACxBuC,EAAO8H,EAAc3H,EAAMmH,KAQS,oBAAgF,+BAJ1GA,EAAQlH,K,qBCKb8H,GAAkC,SAAC,GAAqC,IAApC/H,EAAmC,EAAnCA,KAAeb,GAAoB,EAA7BwG,QAA6B,EAApBxG,MAAM6I,EAAc,EAAdA,SAClE,EAA8B7L,mBAAS,IAAvC,mBAAOgL,EAAP,KAAgBc,EAAhB,KACA,EAAgC9L,mBAA6B,MAA7D,mBAAO+L,EAAP,KAAiBC,EAAjB,KACA,EAAwBhM,oBAAS,GAAjC,mBAAOiM,EAAP,KAAaC,EAAb,KACA,EAAwBlM,mBAAS6D,EAAKiH,SAAtC,mBAAOqB,EAAP,KAAaC,EAAb,KACA,EAAoCpM,mBAAS6D,EAAKgH,aAAlD,mBAAOwB,EAAP,KAAmBC,EAAnB,KACA,EAA8BtM,oBAAS,GAAvC,mBAAOuM,EAAP,KAAgBC,EAAhB,KACMf,EAASnM,aAAY,SAACC,GAAD,uBAAsBA,EAAMC,KAAKwD,YAAjC,aAAsB,EAAiBc,MAE5DJ,EAAS8D,cACTiF,EAAWlC,QAAQwB,GAEnBW,EAAa,WACfN,GAASD,GACFG,EAAPH,EAAqBE,EAAa,EAAmBA,EAAa,GACvD3I,EAAXmI,EAAkBlB,GAAS9G,GFiHP,SAACA,GACzB,OAAO,SAAA4B,GACH,IACIb,GAAMgG,KAAN,iBAAqB/G,EAAKC,GAA1B,SAAqC,CACjCsB,QAAS,CACLiF,OAAQ,sBAEbnE,MAAK,WACJrC,EAAKgH,aAAehH,EAAKiH,SAAW,EAAI,EACxCjH,EAAKiH,SAAWjH,EAAKiH,QACrBrF,EAAS,CACLhF,KAAMsB,EACN4B,QAASE,OAEdiF,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEpC,MAAOA,GACHwF,QAAQC,IAAIzF,KElI2BgM,CAAa9I,KAUtD+I,EAAkB,WACpBZ,EAAY,OAkBRlI,EAA4DD,EAA5DC,GAAI4H,EAAwD7H,EAAxD6H,OAAQmB,EAAgDhJ,EAAhDgJ,YAA0B3B,GAAsBrH,EAAnCgH,YAAmChH,EAAtBqH,UAAU4B,EAAYjJ,EAAZiJ,QACxD,OACI,sBAAKrN,UAAU,cAAf,UACA,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,cAACsN,GAAA,EAAD,CAAQC,IAAKhK,EAAKlD,KAAMmN,IAAKjK,EAAKe,WAAYtE,UAAU,wCACxD,mBAAIA,UAAU,2BAAd,SAA0CuD,EAAKlD,UAElD2L,IAAW5H,EAAKqJ,UAAY,cAAChM,EAAA,EAAD,CAAYzB,UAAU,oBAAoB0B,QA9B3D,SAACgM,GACjBnB,EAAYmB,EAAMC,gBA6Be,SACzB,cAAC,KAAD,MACY,gCAIpB,qBAAKH,IAAKH,EAASE,IAAKhK,EAAKlD,OAC7B,0BAASL,UAAU,uBAAnB,UACI,sBAAKA,UAAU,uBAAf,UACK0M,EAAO,mBAAG1M,UAAU,uCAAuC0B,QAASuL,IAAgB,mBAAGjN,UAAU,cAAc0B,QAASuL,IACzH,mBAAGjN,UAAU,mCAAmC0B,QA5C7C,WACX+K,GAASD,MA4CD,mBAAGxM,UAAU,yCAGjB,oBAAGA,UAAU,qBAAb,oBAA0C4M,KAC1C,sBAAK5M,UAAU,oBAAf,UAAmC,cAAC,IAAD,CAAMC,GAAE,mBAAcgM,EAAO5H,IAAMrE,UAAU,wCAA7C,SAAsFiM,EAAO5L,OAC3H+M,KACL,qBAAKpN,UAAU,gBAAf,SACKyL,GAAYA,EAAStH,KAAI,SAAAoH,GAAO,OAC7B,cAAC,GAAD,CAA2BnH,KAAMA,EAAMmH,QAASA,EACtCQ,cAAeK,EAAWd,GAAoBM,IADzCL,EAAQlH,SAI/B,mBAAGrE,UAAU,2BAAb,8BAAuD4N,KAAuB,IAAhBxJ,EAAKyJ,YAAiBC,OAAO,iBAC1FtB,GACD,0BAASxM,UAAU,iCAAnB,UACI,uBAAOA,UAAU,qBAAqB8B,YAAY,iBAAiBiM,SA5C1D,SAACL,GAClBrB,EAAWqB,EAAMM,OAAOC,QA2C2EA,MAAO1C,IACjGuB,EAAU,cAACoB,GAAA,EAAD,CAAkBC,KAAM,KAAS,wBAAQnO,UAAU,6BAA6B0B,QAzC9E,WACrBqL,GAAW,GACA9I,EAAXmI,EHKkB,SAACb,EAAiBnH,EAAiB2I,GACzD,OAAO,SAAA/G,GACH,IACIb,GAAMf,KAAK,aAAc,CAAC8H,QAASX,EAAS6C,QAAShK,EAAKC,IAAK,IAE5DoC,MAAK,SAACX,GACLY,QAAQC,IAAIb,GACZ,IAAMuI,EAAWvI,EAASc,KAAKA,KAAKyH,SACpClJ,GAAMoB,IAAN,WAAc8H,IAAY5H,MAAK,SAACX,GAC5B1B,EAAKqH,SAAS6C,KAAKxI,EAASc,KAAKA,MACjCF,QAAQC,IAAIb,GACZE,EAAS,CACLhF,KAAM8B,EACNoB,QAASE,IAEb2I,GAAW,MACZ1D,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,SACjCmI,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEpC,MAAOA,GACHwF,QAAQC,IAAIzF,KGzBEqN,CAAWhD,EAASnH,EAAM2I,GF+DtB,SAACxB,EAAiBnH,EAAiB2I,GAC7D,OAAO,SAAA/G,GACH,IACIb,GAAMf,KAAK,aAAc,CAAC8H,QAASX,EAAS6C,QAAShK,EAAKC,IAAK,IAE5DoC,MAAK,SAACX,GACLY,QAAQC,IAAIb,GACZ,IAAMuI,EAAWvI,EAASc,KAAKA,KAAKyH,SACpClJ,GAAMoB,IAAN,WAAc8H,IAAY5H,MAAK,SAACX,GAC5B1B,EAAKqH,SAAS6C,KAAKxI,EAASc,KAAKA,MACjCF,QAAQC,IAAIb,GACZE,EAAS,CACLhF,KZpIQ,gBYqIRkD,QAASE,IAEb2I,GAAW,MACZ1D,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,SACjCmI,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEpC,MAAOA,GACHwF,QAAQC,IAAIzF,KEnFkDsN,CAAejD,EAASnH,EAAM2I,IAChGV,EAAW,KAsCyC,yBAGpD,eAACoC,GAAA,EAAD,CACIpK,GAAG,aACHiI,SAAUA,EACVxC,KAAMkD,EACN3C,QAAS8C,EACTuB,cAAe,CACX,kBAAmB,gBAN3B,UASKnL,GAAQA,EAAKc,KAAOD,EAAKqJ,WAAa,cAACkB,GAAA,EAAD,CAAUjN,QA9DpC,WACjBuC,EF2BkB,SAACI,GACvB,OAAO,SAAA2B,GACHA,EAAS6F,IAAe,IACxB,IACI1G,GAAMqG,OAAN,iBAAuBnH,GAAM,CACzBsB,QAAS,CACLiF,OAAQ,sBAEbnE,MAAK,WACJT,EAAS,CACLhF,KAAM0B,EACNwB,QAASG,OAEdgF,OAAM,SAAAnI,GAAK,OAAIwF,QAAQC,IAAIzF,MAElC,MAAOA,GACHwF,QAAQC,IAAIzF,GAbhB,QAgBI2K,IAAe,KE9CZ+C,CAAWvK,IAClB8I,KA4D2C,oBACtC5J,GAAQA,EAAKc,KAAOD,EAAKqJ,WAAa,cAAC,IAAD,CAAMxN,GAAE,YAAeH,MAAO,CAACuE,GAAID,EAAKC,IAAxC,SAA6C,cAACsK,GAAA,EAAD,qBACpF,cAACA,GAAA,EAAD,CAAUjN,QAASyL,EAAnB,2BCnGC0B,GAA4B,SAAC,GAEnC,IADHzK,EACE,EADFA,KAEIH,EAAS8D,cACPqF,EAAuDhJ,EAAvDgJ,YAAa/B,EAA0CjH,EAA1CiH,QAASD,EAAiChH,EAAjCgH,YAAaK,EAAoBrH,EAApBqH,SAAUQ,EAAU7H,EAAV6H,OACrD,EAAgC1L,oBAAS,GAAzC,mBAAOuO,EAAP,KAAiBC,EAAjB,KACA,EAAgCC,IAAMzO,SAA6B,MAAnE,mBAAO+L,EAAP,KAAiBC,EAAjB,KAEMzC,GADSjK,aAAY,SAACC,GAAD,uBAAsBA,EAAMC,KAAKwD,YAAjC,aAAsB,EAAiBc,MACrDyG,QAAQwB,IACrB2C,qBAAU,cAEP,CAAC5D,IAEJ,IAIM6D,EAAc,WAClB3C,EAAY,OAQR4C,EAAS,WACblL,EAAOiH,GAAS9G,KAGlB,OACE,sBAAKpE,UAAU,OAAf,UACE,sBAAKA,UAAU,YAAf,UACE,gCACE,cAACsN,GAAA,EAAD,CAAQC,IAAI,OAAOC,IAAKvB,EAAO3H,aAC/B,cAAC,IAAD,CAAMrE,GAAE,mBAAcgM,EAAO5H,IAAMrE,UAAU,iBAA7C,SAA+DiM,EAAO5L,UAExE,cAACoB,EAAA,EAAD,CAAYC,QAxBE,SAACgM,GACnBnB,EAAYmB,EAAMC,gBAuBd,SACE,cAAC,KAAD,MAEF,eAACc,GAAA,EAAD,CACEpK,GAAG,aACHiI,SAAUA,EACVxC,KAAMA,EACNO,QAAS6E,EACTR,cAAe,CACb,kBAAmB,gBANvB,UASE,cAACC,GAAA,EAAD,CAAUjN,QA5BC,WACjBwN,IACAH,GAAY,IA0BN,8BACA,cAACJ,GAAA,EAAD,CAAUjN,QAASwN,EAAnB,4BACA,cAACP,GAAA,EAAD,CAAUjN,QAASwN,EAAnB,0BAGJ,gCACE,qBAAKlP,UAAU,YAAYwN,IAAKpJ,EAAKiJ,QAASE,IAAI,eAClD,sBAAKvN,UAAU,aAAf,UACE,sBAAKA,UAAU,gBAAf,UACGqL,EAAU,mBAAGrL,UAAU,0CAA0C0B,QAASyN,IACvE,mBAAGnP,UAAU,wBAAwB0B,QAASyN,IAClD,mBAAGnP,UAAU,iCAGf,oBAAGA,UAAU,aAAb,oBAAkCoL,KAElC,sBAAKpL,UAAU,oBAAf,UAAmC,cAAC,IAAD,CAAMC,GAAE,mBAAcgM,EAAO5H,IAAMrE,UAAU,wCAA7C,SAAsFiM,EAAO5L,OAC7H+M,KACH,qBAAKpN,UAAU,gBAAf,SACGyL,GAAYA,EAAS2D,MAAM,EAAE,GAAGjL,KAAI,SAAAoH,GAAO,OACxC,cAAC,GAAD,CAA2BA,QAASA,EAASnH,KAAMA,EAAM2H,cAAeT,IAAzDC,EAAQlH,SAI7B,mBAAGrE,UAAU,qBAAb,8BAAiD4N,KAAuB,IAAhBxJ,EAAKyJ,YAAiBC,OAAO,uBAGzF,cAAC,GAAD,CAAOhE,KAAMgF,EAAU/E,QAASgF,EAAahO,WAAW,EAAMmJ,SAAS,KAAKF,SAAU,cAAC,GAAD,CAAY5F,KAAMA,EAAMb,KAAMa,EAAK6H,OAAQlC,QAASgF,EAAa3C,UAAU,UCvF1JiD,GAA4B,SAAC,GAAQ,gBAChD,IAAMpL,EAAS8D,cACf,EAAyDlI,aAAY,SAACC,GAAD,OAAsBA,EAAMqD,SAAzFA,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YAAaE,EAA5B,EAA4BA,YAAaD,EAAzC,EAAyCA,YAEzC4L,qBAAU,WACRhL,EAAOgH,IAAe,IACtBhH,EAAOwG,GAAS,EAAG,OAClB,IAQH,OAAIrH,EAEA,qBAAKpD,UAAU,eAAf,SACE,cAACkO,GAAA,EAAD,CAAkBC,KAAM,OAM5B,sBAAKnO,UAAU,eAAf,UACGmD,GACCA,EAAMgB,KAAI,SAACC,GAAD,OACR,cAAC,GAAD,CAEEA,KAAMA,GADDA,EAAKC,OAIff,GAAe,cAACiG,EAAA,EAAD,CAAQ7H,QAtBR,SAACgM,GACnBA,EAAM4B,iBACNhM,GAAeW,EAAOwG,GAASpH,EAAY,EAAGF,KAoB5B,oC,SCpCToM,GAAgD,SAAC,GAAkB,IAAhBvF,EAAe,EAAfA,SAO9D,OAN0BnK,aAAY,SAACC,GAAD,OAAsBA,EAAMC,QAA1DH,cAOCoK,EAGF,cAAC,KAAD,CAAU/J,GAAG,aCVTuP,GAA0C,SAAC,GAAkB,IAAhBxF,EAAe,EAAfA,SAGxD,OAF0BnK,aAAY,SAACC,GAAD,OAAsBA,EAAMC,QAA1DH,cAGC,cAAC,KAAD,CAAUK,GAAG,UAGf+J,G,8DCKIyF,GAA4C,WACrD,MAA0BT,WAAe,QAAzC,mBAAOf,EAAP,KAAcyB,EAAd,KACQnM,EAAS1D,aAAY,SAACC,GAAD,OAAsBA,EAAMC,QAAjDwD,KACFoM,EAAqC,CACvC,CACI1B,MAAO,OACPjF,KAAM,cAAC,KAAD,KAEV,CACIiF,MAAO,SACPjF,KAAM,cAAC,KAAD,KAEV,CACIiF,MAAM,WAAD,OAAa1K,EAAMc,IACxB2E,KAAK,cAACsE,GAAA,EAAD,CACDC,IAAKhK,EAAMlD,KACXmN,IAAKjK,EAAMe,WACXsL,GAAI,CAAEC,MAAO,GAAIC,OAAQ,QASvC,OACQ,cAACC,GAAA,EAAD,CAAkB9B,MAAOA,EAAOF,SALjB,SAACL,EAA8BsC,GAChDN,EAASM,IAIiDhQ,UAAU,gBAAlE,SACK2P,EAAcxL,KAAI,SAAC8L,GAChB,OACI,cAACC,GAAA,EAAD,CAEIC,UAAWC,IACXnQ,GAAE,WAAMgQ,EAAOhC,OACfA,MAAOgC,EAAOhC,MACdjF,KAAMiH,EAAOjH,MAJRiH,EAAOhC,a,oBC1CzBoC,GAAyC,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,KACjE,EAA8BhQ,oBAAS,GAAvC,mBAAOiQ,EAAP,KAAgBC,EAAhB,KAEMtB,EAAS,WACXsB,GAAYD,IAahB,OACI,gCACI,cAACjH,EAAA,EAAD,CAAQ7H,QAASyN,EAAQ7O,QAAQ,WAAWW,MAAM,UAAlD,SACKqP,IAEL,cAACI,GAAA,EAAD,CAAQ5G,KAAM0G,EAASnG,QAAS8E,EAAQwB,OAAO,SAA/C,SAdJ,cAACC,GAAA,EAAD,CACIC,KAAK,eACLnP,QAASyN,EACT2B,UAAW3B,EAHf,SAKKoB,U,wCCdAQ,GAAoD,SAAC,GAAY,IAAX3M,EAAU,EAAVA,KAC/D,OAAQ,sBAAKpE,UAAU,cAAf,UACJ,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,cAACsN,GAAA,EAAD,CAAQC,IAAKnJ,EAAK6H,OAAO5L,KAAMmN,IAAKpJ,EAAK6H,OAAO3H,WAAYtE,UAAU,wCACtE,cAAC,IAAD,CAAMC,GAAE,mBAAcmE,EAAK6H,OAAO5H,IAAMrE,UAAU,kCAAlD,SAAqFoE,EAAK6H,OAAO5L,UAErG,gCAEJ,qBAAKmN,IAAKpJ,EAAKiJ,QAASE,IAAKnJ,EAAKiJ,UAClC,0BAASrN,UAAU,uBAAnB,UACA,oBAAGA,UAAU,qBAAb,oBAA0CoE,EAAKgH,eAC/C,sBAAKpL,UAAU,oBAAf,UAAmC,cAAC,IAAD,CAAMC,GAAE,mBAAcmE,EAAK6H,OAAO5H,IAAMrE,UAAU,wCAAlD,SAA2FoE,EAAK6H,OAAO5L,OACrI+D,EAAKgJ,sBCsBH4D,GA/BiC,SAAC,GAA4B,IAA1B5M,EAAyB,EAAzBA,KAAO6M,EAAkB,EAAlBA,aACtD,EAAwB1Q,oBAAS,GAAjC,mBAAOuJ,EAAP,KAAaC,EAAb,KACQxG,EAAS1D,aAAY,SAACC,GAAD,OAAsBA,EAAMyE,eAAjDhB,KAOR,OACI,gCACA,sBAAKvD,UAAU,qBAAqB0B,QAPzB,WACXqI,GAASD,IAMT,UACI,qBAAK9J,UAAU,2BAA2BwN,IAAKpJ,EAAKiJ,QAASE,IAAI,OACjE,qBAAKvN,UAAU,6BAAf,SACI,sBAAKA,UAAU,uCAAf,UACI,sBAAKA,UAAU,kCAAf,UACI,mBAAGA,UAAU,mBACb,4BAAIoE,EAAK8M,oBAEb,sBAAKlR,UAAU,kCAAf,UACI,mBAAGA,UAAU,iBACb,4BAAIoE,EAAKgH,yBAKrB,cAAC,GAAD,CAAOpB,SAAUiH,EAAe,cAAC,GAAD,CAAkB7M,KAAMA,IAAU,cAAC,GAAD,CAAYA,KAAMA,EAAMb,KAAMA,EAAO6I,UAAU,IAAUtC,KAAMA,EAAMC,QAASA,EAAShJ,WAAW,EAAMmJ,SAAS,WCzBlLiH,GAA0D,WACnE,IAAMnJ,EAAUC,YAA2B,CACvCC,SAAUC,YAAYV,MAE1B,EAAsCO,EAAQyB,MAAM,CAAC,WAAY,0BAAjE,mBAAOjC,EAAP,KAAiBkC,EAAjB,KACMzF,EAAS8D,cAOjB,OACK,0BAAS/H,UAAU,QAAnB,UACI,sDACA,cAAC,IAAD,2BAAkBgI,GAAlB,aACI,uBACImB,SAAUnB,EAAQoB,cAVhB,SAACxC,GACdF,QAAQC,IAAI,UACZ1C,EjBuFqB,SAAC2C,GAC1B,OAAO,SAAAZ,GACH,IACIb,GAAMf,KAAK,oBAAqBwC,GAC9BH,MACD,SAACX,GACEY,QAAQC,IAAIb,MACbuD,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,MAClC,MAAOA,GACLwF,QAAQC,IAAIzF,KiBhGTkQ,CAAcxK,OASV5G,UAAU,yCAFd,UAKI,cAAC,EAAD,CAAeI,MAAM,eAAeC,KAAK,WAAWC,QAAQ,aAC5D,cAAC,EAAD,CACIF,MAAM,mBACNC,KAAK,wBACLC,QAAQ,kBAEEsJ,IAAbpC,GAA0BA,IAAakC,EAAoB,cAACH,EAAA,EAAD,CAAQvI,KAAK,SAASV,QAAQ,YAA9B,6BAEhD,cAACiJ,EAAA,EAAD,CAAQvI,KAAK,SAASV,QAAQ,YAAYyI,UAAQ,EAAlD,uC,UC9BlBsI,GAA0C,SAAC,GAAe,IAAdtH,EAAa,EAAbA,QAC/C9F,EAAS8D,cACRxE,EAAQ1D,aAAY,SAACC,GAAD,OAAsBA,EAAMC,QAAhDwD,KACP,EAAgChD,mBAAS,IAAzC,mBAAO+Q,EAAP,KAAiBC,EAAjB,KAsBF,OACC,sBAAKvR,UAAU,eAAf,UACC,8CACG,sBAAKA,UAAU,uBAAf,UACI,cAACsN,GAAA,EAAD,CAAQC,IAAKhK,EAAMlD,KAAMmN,IAAG,OAAEjK,QAAF,IAAEA,OAAF,EAAEA,EAAMe,WAAYsL,GAAI,CAAEC,MAAO,GAAIC,OAAQ,MACzE,sBAAK9P,UAAU,0BAAf,UACI,mBAAGA,UAAU,yBAAb,gBAAuCuD,QAAvC,IAAuCA,OAAvC,EAAuCA,EAAMlD,OAC7C,wBAAOL,UAAU,+BAAjB,UACI,uBAAOgB,KAAK,OAAOwQ,OAAO,wBAAwBzD,SAlB5C,SAACL,GAKlBA,EAAMM,OAAOyD,OAASC,aAAiBhE,EAAMM,OAAOyD,MAAM,GAJ1C,CACZE,iBAAkB,IAClBC,cAAc,IAEqDnL,MAAK,SAACoL,GlB2F5D,IAACC,EkB1FdpE,EAAMM,OAAOyD,OAAUxN,GlB0FT6N,EkB1F0BD,ElB2FzC,SAAA7L,GACH,IACI,IAAM+L,EAAe,IAAIC,SACzBD,EAAaE,OAAO,SAAUH,GAC9B3M,GAAMf,KAAK,UAAW2N,EAAc,CAChCvL,OAAQ,CACJ0L,QAAS,SAEbvM,QAAS,CACL,eAAgB,yBAEtBc,MAAK,SAACX,GACJY,QAAQC,IAAIb,EAASc,KAAKA,KAAKtC,YAC/B0B,EAAS,CACLhF,KAAMwB,EACN0B,QAAS4B,EAASc,KAAKA,KAAKtC,gBAEjC+E,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,MAGpC,MAAOA,GACHwF,QAAQC,IAAIzF,UkB/GbmI,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,SAUzB,yBAMR,kCACQ,uBACIiI,SAnCM,SAACuE,GlBqII,IAACrN,EkBpIvB4D,GlBoIuB5D,EkBpIDiR,ElBqInB,SAAAtL,GACH,IACI,IAAMmM,EAAU,IAAIH,SACpBG,EAAQF,OAAO,OAAQ5R,GACvB8E,GAAMf,KAAK,UAAW+N,EAAS,CAC3B3L,OAAQ,CACJ0L,QAAS,SAEbvM,QAAS,CACL,eAAgB,yBAEtBc,MAAK,SAACX,GACJ,IAAMsM,EAAkBtM,EAASc,KAAKA,KAAKvG,KAC3C2F,EAAS,CACLhF,KAAMyB,EACNyB,QAASkO,OAEd/I,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,MAGpC,MAAOA,GACHwF,QAAQC,IAAIzF,OkBzJhB6I,GAAQ,GACR2D,EAAM4B,kBAiCKtP,UAAU,wCAFd,UAII,cAACc,EAAA,EAAD,CAAWV,MAAM,WAAWC,KAAK,WAAWyB,YAAayB,EAAMlD,KAAMW,KAAK,OAAOV,QAAQ,WAAWyN,SAhC9F,SAACL,GAClB6D,EAAY7D,EAAMM,OAAOC,UAgCd,cAAC1E,EAAA,EAAD,CAAQvI,KAAK,SAASV,QAAQ,YAA9B,oCCKJ+R,GAhD2C,SAAC,GAAyB,IAAxBhO,EAAuB,EAAvBA,GAAIiO,EAAmB,EAAnBA,KAAMvI,EAAa,EAAbA,QAElE,EAA0BxJ,mBAAwB,MAAlD,mBAAOgS,EAAP,KAAcC,EAAd,KAF+E,4CAI/E,sBAAAjK,EAAA,sEACUpD,GAAMoB,IAAN,kBAAqBlC,EAArB,YAA2BiO,GAAQ,CACrC3M,QAAS,CACTiF,OAAQ,sBACRnE,MAAK,SAACX,GACN,IAAMyM,EAAQzM,EAASc,KAAKA,KAC5B4L,EAASD,MAEXlJ,OAAM,SAAAnI,GAAK,OAAIwF,QAAQC,IAAIzF,MARjC,2CAJ+E,wBAuB/E,OARA+N,qBAAU,WAGN,OAlB2E,mCAgB3EwD,GAEO,WACH1I,GAAQ,MAEb,IAGC,0BAAS/J,UAAU,gBAAnB,UACI,6BAAKsS,EAAKI,OAAO,GAAGC,cAAgBL,EAAKlD,MAAM,KAC/C,yBAASpP,UAAU,uBAAnB,SACKuS,EAAQA,EAAMpO,KAAI,SAAAZ,GAAI,OACnB,0BAAuBvD,UAAU,sBAAjC,UAEI,qBAAKA,UAAU,wBAAf,SACI,cAAC,IAAD,CAAMC,GAAE,mBAAcsD,EAAKc,IAA3B,SAAiC,cAACiJ,GAAA,EAAD,CAC7BC,IAAKhK,EAAKlD,KACVmN,IAAKjK,EAAKe,WACVsL,GAAI,CAAEC,MAAO,GAAIC,OAAQ,UAIjC,cAAC,IAAD,CAAM7P,GAAE,mBAAcsD,EAAKc,IAA3B,SAAkCd,EAAKlD,SAV7BkD,EAAKc,OAYlB,yBAASrE,UAAU,yBAAnB,SACD,cAACkO,GAAA,EAAD,YC3BP0E,GAAkC,WAC3C,IAAM3O,EAAS8D,cACT8K,EAAehT,aAAY,SAACC,GAAD,OAAsBA,EAAMC,KAAKwD,KAAMc,MACxE,EAA+DxE,aAAY,SAACC,GAAD,OAAsBA,EAAMyE,eAA/FhB,EAAR,EAAQA,KAAMG,EAAd,EAAcA,YAAaP,EAA3B,EAA2BA,MAAOE,EAAlC,EAAkCA,YAAaC,EAA/C,EAA+CA,YACvCe,EAAOyO,eAAPzO,GACR,EAAwB9D,oBAAS,GAAjC,mBAAOuJ,EAAP,KAAaC,EAAb,KACA,EAA8CxJ,oBAAS,GAAvD,mBAAOwS,EAAP,KAAwBC,EAAxB,KACA,EAAoCzS,oBAAS,GAA7C,mBAAO0S,EAAP,KAAmBC,EAAnB,KACA,EAAwB3S,mBAAe,aAAvC,mBAAO+R,EAAP,KAAaa,EAAb,KAEAlE,qBAAU,WACNhL,EAAO4H,IAAe,IACtB5H,EdxBmB,SAACI,GACxB,OAAO,SAAA2B,GACH,IACIb,GAAMoB,IAAN,kBAAqBlC,GAAM,CACvBsB,QAAS,CACLiF,OAAQ,sBAEbnE,MAAK,SAACX,GACL,IAAMvC,EAAOuC,EAASc,KAAKA,KAC3BZ,EAAS,CACLhF,KAAMoB,EACN8B,QAASX,OAEd8F,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,MAEpC,MAAOA,GACHwF,QAAQC,IAAIzF,KcQTkS,CAAYC,OAAOhP,KAC1BJ,EAAO0H,GAAa0H,OAAOhP,GAAK,GAAI,MACrC,CAACA,IAEJ,IAMMiP,EAAc,WAChBrP,GpBWG,SAAA+B,GACHA,EAASM,IAAe,IACxB,IACInB,GAAMf,KAAK,YAAYqC,MAAK,WACxBT,EAAS,CACLhF,KAAMgB,OAEXqH,OAAM,SAACnI,GACNwF,QAAQC,IAAIzF,MAGpB,MAAOA,GACHwF,QAAQC,IAAIzF,QoBpBdqS,EAAa,WACfxJ,GAAQ,IAGNyJ,EAAwB,WAC1BR,GAAmB,IAGjBS,EAAe,WACjBlQ,GAAQU,EdKU,SAACV,GACvB,OAAO,SAAAyC,GACH,IACIb,GAAMgG,KAAN,kBAAsB5H,EAAKc,GAA3B,YAAwCoC,MAAK,WACzClD,EAAKmQ,iBAAmBnQ,EAAKoQ,YAAc,EAAI,EAC/CpQ,EAAKoQ,YAAcpQ,EAAKoQ,WACxB3N,EAAS,CACLhF,KAAMuB,EACN2B,QAASX,OAEd8F,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,MAClC,MAAOA,GACLwF,QAAQC,IAAIzF,KcjBD0S,CAAWrQ,KAGxBsQ,EAAmB,SAACC,GAClBvQ,IACEA,EAAKmQ,gBAAkB,GAAoB,cAAfI,GAC1BvQ,EAAKwQ,eAAiB,GAAoB,aAAfD,KAC/BX,EAAQW,GACRZ,GAAc,KAoCtB,OAAGxP,EACQ,qBAAK1D,UAAU,eAAf,SACH,cAACkO,GAAA,EAAD,CAAkBC,KAAM,OAIjC,sBAAKnO,UAAU,kBAAf,UACC,sBAAKA,UAAU,iBAAf,UACI,cAACsN,GAAA,EAAD,CACIC,IAAG,OAAEhK,QAAF,IAAEA,OAAF,EAAEA,EAAMlD,KACXmN,IAAG,OAAEjK,QAAF,IAAEA,OAAF,EAAEA,EAAMe,WACXsL,GAAI,CAAEC,MAAO,GAAIC,OAAQ,MAE7B,sBAAK9P,UAAU,uBAAf,UACKuD,GAAQ,4BAAIA,EAAMlD,OACnB,sBAAKL,UAAU,+BAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,mBAAGA,UAAU,4BAAb,gBAA0CuD,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAMyQ,cAChD,yCAEJ,sBAAKhU,UAAU,qBAAqB0B,QAAS,kBAAMmS,EAAiB,cAApE,UACI,mBAAG7T,UAAU,4BAAb,gBAA0CuD,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAMmQ,kBAChD,6CAEJ,sBAAK1T,UAAU,qBAAqB0B,QAAS,kBAAMmS,EAAiB,aAApE,UACI,mBAAG7T,UAAU,4BAAb,gBAA0CuD,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAMwQ,iBAChD,sDAKb,qBAAK/T,UAAU,kBAAf,SA7CI6S,IAAiBQ,OAAOhP,GACf,sBAAKrE,UAAU,kBAAf,UACJ,cAACuJ,EAAA,EAAD,CAAQjJ,QAAQ,WAAWoB,QAAS8R,EAApC,0BACA,cAAC,GAAD,CAAiBjD,KApBjB,eAAC0D,GAAA,EAAD,WACJ,eAACC,GAAA,EAAD,CAAUjE,QAAM,EAAhB,UACA,cAACkE,GAAA,EAAD,UAAc,mBAAGnU,UAAU,iBAC3B,cAACoU,GAAA,EAAD,CAAc1S,QAAS6R,EAAvB,gCAEA,eAACW,GAAA,EAAD,CAAUjE,QAAM,EAAhB,UACI,cAACkE,GAAA,EAAD,UAAc,mBAAGnU,UAAU,0BAC3B,cAACoU,GAAA,EAAD,CAAc1S,QAAS4R,EAAvB,yBAEJ,eAACY,GAAA,EAAD,CAAUjE,QAAM,EAAhB,UACI,cAACkE,GAAA,EAAD,UAAc,mBAAGnU,UAAU,0BAC3B,cAACoU,GAAA,EAAD,2BAS+B9D,YAAY,gBAIvC,qBAAKtQ,UAAU,kBAAf,UACC,OAAJuD,QAAI,IAAJA,OAAA,EAAAA,EAAMoQ,YAAa,cAACpK,EAAA,EAAD,CAAQjJ,QAAQ,WAAWoB,QAAS+R,EAApC,sBAAsE,cAAClK,EAAA,EAAD,CAAQjJ,QAAQ,WAAWoB,QAAS+R,EAApC,wBAwCnG,qBAAKzT,UAAU,gBAAf,SACKmD,GAASA,EAAMgB,KAAI,SAACC,GAAD,OAChB,cAAC,GAAD,CAAaA,KAAMA,EAAoB6M,cAAc,GAAvB7M,EAAKC,SAG1C,cAAC,GAAD,CAAOyF,KAAMA,EAAMC,QAASA,EAASC,SAAU,cAAC,GAAD,MAC/C,cAAC,GAAD,CAAOF,KAAMiJ,EAAiBhJ,QAASiJ,EAAoBhJ,SAAU,cAAC,GAAD,CAAaD,QAASiJ,MAC3FzP,GACG,cAAC,GAAD,CAAOuG,KAAMmJ,EAAYlJ,QAASmJ,EAAejJ,WAAW,QACrDD,SAAU,cAAC,GAAD,CAAkB3F,GAAId,EAAKc,GAAIiO,KAAMA,EAAMvI,QAASmJ,MAExE5P,GAAe,cAACiG,EAAA,EAAD,CAAQ7H,QA5GH,SAACgM,GACrBA,EAAM4B,iBACNhM,GAAeW,EAAO0H,GAAapI,EAAMc,GAAIlB,EAAQE,EAAY,KA0GlD,oC,wEChIjBgR,GAAW,SAACC,GACd,IAAQtK,EAAqCsK,EAArCtK,SAAUiE,EAA2BqG,EAA3BrG,MAAOsG,EAAoBD,EAApBC,MAAUC,EAAnC,aAA6CF,EAA7C,IAEA,OACI,6CACIzD,KAAK,WACL4D,OAAQxG,IAAUsG,GACdC,GAHR,aAKKvG,IAAUsG,GACP,cAAC3D,GAAA,EAAD,CAAKhB,GAAI,CAAE8E,EAAG,GAAd,SACI,8BAAM1K,UAMb2K,GAAgC,WACzC,MAA0BpU,mBAAS,GAAnC,mBAAO0N,EAAP,KAAcyB,EAAd,KACA,EAA0BnP,mBAA6B,MAAvD,mBAAO4C,EAAP,KAAcsH,EAAd,KACA,EAA0BlK,mBAAwB,MAAlD,mBAAOgS,EAAP,KAAcC,EAAd,KACA,EAA8BjS,oBAAS,GAAvC,mBAAOuM,EAAP,KAAgBC,EAAhB,KAEM6H,EAAYC,cACd,SAACC,GACMA,EAAYC,QAAU,IACrBhI,GAAW,GACXrG,QAAQC,IAAImO,GACZ3P,GAAMoB,IAAI,UAAW,CACjBC,OAAQ,CACJ,KAAQsO,EACR,KAAQA,GAEZnP,QAAS,CACLiF,OAAQ,sBAEbnE,MAAK,SAACX,GACLY,QAAQC,IAAIb,GACZ,IAAMkP,EAAalP,EAASc,KAAKA,KAAK2L,MAChC0C,EAAanP,EAASc,KAAKA,KAAKzD,MAEtCqP,EAASwC,GACTvK,EAASwK,GACTlI,GAAW,MACZ1D,OAAM,SAAAnI,GAAK,OAAIwF,QAAQC,IAAIzF,SAItC,KAOJ,OACD,sBAAKlB,UAAU,SAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,cAACc,EAAA,EAAD,CACIC,WAAS,EACTe,YAAY,SACZiM,SAAU,SAACmH,GAAD,OAAON,EAAUM,EAAElH,OAAOC,QACpC3N,QAAQ,WACRe,WAAY,CACR8T,eACI,cAAC5T,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,mBAAGxB,UAAU,yBAMjC,qBAAKA,UAAU,kBAAf,SAEI,eAAC4Q,GAAA,EAAD,CAAKhB,GAAI,CAAEC,MAAO,QAAlB,UACI,cAACe,GAAA,EAAD,CAAKhB,GAAI,CAAEwF,aAAc,EAAGC,YAAa,WAAzC,SACI,eAACC,GAAA,EAAD,CAAMrH,MAAOA,EAAOF,SAzBX,SAACL,EAA6BsC,GAClDN,EAASM,IAwBE,UACI,cAACuF,GAAA,EAAD,CAAKnV,MAAM,UACX,cAACmV,GAAA,EAAD,CAAKnV,MAAM,eAGnB,cAAC,GAAD,CAAU6N,MAAOA,EAAOsG,MAAO,EAA/B,SACKzH,EAAU,qBAAK9M,UAAU,kBAAf,SAAiC,cAACkO,GAAA,EAAD,CAAkBC,KAAM,OAAeoE,GAASA,EAAMpO,KAAI,SAACZ,GAAD,OAClG,0BAAuBvD,UAAU,sBAAjC,UAEI,qBAAKA,UAAU,wBAAf,SACI,cAAC,IAAD,CAAMC,GAAE,mBAAcsD,EAAKc,IAA3B,SAAiC,cAACiJ,GAAA,EAAD,CAC7BC,IAAKhK,EAAKlD,KACVmN,IAAKjK,EAAKe,WACVsL,GAAI,CAAEC,MAAO,GAAIC,OAAQ,UAIjC,cAAC,IAAD,CAAM7P,GAAE,mBAAcsD,EAAKc,IAA3B,SAAkCd,EAAKlD,SAV7BkD,EAAKc,SAc3B,cAAC,GAAD,CAAU4J,MAAOA,EAAOsG,MAAO,EAA/B,SACKzH,EAAU,qBAAK9M,UAAU,kBAAf,SAAiC,cAACkO,GAAA,EAAD,CAAkBC,KAAM,OAAehL,GAAS,qBAAKnD,UAAU,gBAAf,SAAgCmD,EAAMgB,KAAI,SAACC,GAAD,OAClI,cAAC,GAAD,CAAaA,KAAMA,EAAoB6M,cAAc,GAAvB7M,EAAKC,oB,wCClH7CmR,GAAoC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAQ/C,EAMIC,aAAY,CAACC,OAbF,SAACC,GACZA,EAAcC,SAAQ,SAACC,GACnBpP,QAAQC,IAAImP,GACZL,EAAQK,OAUStE,OAAQ,mCAAoCuE,UAAU,EAC3EC,SAAU,IANVC,EADJ,EACIA,aACAC,EAFJ,EAEIA,cACAC,EAHJ,EAGIA,aACAC,EAJJ,EAIIA,aACAC,EALJ,EAKIA,aAaJ,OACQ,gDAASJ,KAAT,IAAyBjW,UAAU,WAAnC,UACI,qCAAWkW,MACX,mBAAGlW,UAAS,6BAXjBqW,EACQ,oBAERD,EACQ,yBADX,KASSA,GAAiB,mBAAGpW,UAAU,iBAAb,mCACjBqW,GAAiB,mBAAGrW,UAAU,iBAAb,oCAChBmW,GAAiB,mBAAGnW,UAAU,iBAAb,6BACnB,cAACuJ,EAAA,EAAD,CAAQjJ,QAAQ,YAAhB,qC,kBC7BHgW,GAAoC,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,QAASnS,EAAgB,EAAhBA,KAAM0R,EAAU,EAAVA,KACtDvS,EAAS1D,aAAY,SAACC,GAAD,OAAsBA,EAAMC,QAAjDwD,KACFiT,EAAe,SAAC9I,GAClB6I,EAAQ,2BACDnS,GADA,mBAEFsJ,EAAMM,OAAO3N,KAAOqN,EAAMM,OAAOC,UAW1C,OAPAgB,qBAAU,WACNsH,EAAQ,2BACDnS,GADA,IAEHqS,MAAOX,OAEZ,CAACA,IAGA,uBAAM9V,UAAU,YAAhB,UACI,qBAAKwN,IAAKkJ,IAAIC,gBAAgBb,GAAOvI,IAAI,YAAYvN,UAAU,oBAC/D,sBAAKA,UAAU,uBAAf,UACI,cAACsN,GAAA,EAAD,CAAQC,IAAI,KAAKC,IAAG,OAAEjK,QAAF,IAAEA,OAAF,EAAEA,EAAMe,aAC5B,4BAAIf,EAAMlD,UAEd,sBAAKL,UAAU,oBAAf,UAEI,cAACc,EAAA,EAAD,CACIC,WAAS,EACTX,MAAM,kBACNwW,WAAS,EACTC,QAAS,EACT5I,MAAK,OAAE7J,QAAF,IAAEA,OAAF,EAAEA,EAAMgJ,YACbW,SAAUyI,EACVnW,KAAK,cACLL,UAAU,qBAEd,cAACc,EAAA,EAAD,CACIC,WAAS,EACTX,MAAM,OACN0B,YAAY,iBACZmM,MAAK,OAAE7J,QAAF,IAAEA,OAAF,EAAEA,EAAM0S,KACb/I,SAAUyI,EACVnW,KAAK,OACLL,UAAU,4BC9BxB+W,GAAQ,CAAC,YAAa,eAEfC,GAAkC,WAC3C,IAAQzT,EAAS1D,aAAY,SAACC,GAAD,OAAsBA,EAAMC,QAAjDwD,KACAG,EAAgB7D,aAAY,SAACC,GAAD,OAAsBA,EAAMyE,eAAxDb,YAER,EAAwBnD,mBAAsB,MAA9C,mBAAOuV,EAAP,KAAaL,EAAb,KACA,EAAoClV,mBAAS,GAA7C,mBAAO0W,EAAP,KAAmBC,EAAnB,KACA,EAA4B3W,oBAAS,GAArC,mBAAe4W,GAAf,WACA,EAAwB5W,mBAAuB,CAC3CkW,MAAO,KACPrJ,YAAa,GACb0J,KAAM,KAHV,mBAAO1S,EAAP,KAAamS,EAAb,KAKMtS,EAAS8D,cACTqP,EAAWC,eAEjBpI,qBAAU,cACP,CAAC6G,EAAM1R,IAEV,IAKMkT,EAAgB,CAClB,CACKC,YAAczB,EAAuC,qBAAKtI,IAAKkJ,IAAIC,gBAAgBb,GAAOvI,IAAI,OAAO7L,QAP3F,WACfyV,GAAU,IAMqHnX,UAAU,oBAA/G,cAAC,GAAD,CAAUyV,QAASA,KAE7C,CACI8B,YAAa,cAAC,GAAD,CAAUhB,QAASA,EAASnS,KAAMA,EAAM0R,KAAMA,MAkB7D0B,EAAa,uCAAG,8BAAAjP,EAAA,sDAClBtE,EAAO4H,IAAe,IAChB4L,EAAQ,IAAIzF,SACZ0F,EAAU,CACZC,UAAW,EACXhG,iBAAkB,KAClBC,cAAc,GAElBkE,GAAQpE,aAAiBoE,EAAM4B,GAC1BjR,MAAK,SAACoL,GACHnL,QAAQC,IAAIkL,GACZ4F,EAAMxF,OAAO,QAASJ,GACtBzN,EAAKgJ,aAAeqK,EAAMxF,OAAO,cAAe7N,EAAKgJ,aACrDhJ,EAAK0S,MAAQW,EAAMxF,OAAO,OAAQ7N,EAAK0S,MAEvC3R,GAAMf,KAAN,UACIqT,EACA,CACI9R,QAAS,CACL,eAAgB,yBAG1Bc,MAAK,SAACoE,GACJnE,QAAQC,IAAIkE,EAAIjE,MAChBwQ,EAAS,YAAD,OAAa7T,EAAMc,KAC3BJ,EAAO4H,IAAe,OACvBxC,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,SACjCmI,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,MACpCwF,QAAQC,IAAIvC,EAAKqS,OA5BC,2CAAH,qDA+BnB,OAAG/S,EACQ,qBAAK1D,UAAU,oBAAf,SAAmC,cAACkO,GAAA,EAAD,CAAkBC,KAAM,OAIlE,sBAAMnO,UAAU,WAAhB,SACI,eAAC4Q,GAAA,EAAD,CAAKhB,GAAI,CAACC,MAAO,QAAjB,UACA,cAAC+H,GAAA,EAAD,CAASX,WAAYA,EAAYY,kBAAgB,EAAjD,SACKd,GAAM5S,KAAI,SAAC/D,EAAOmU,GAKf,OACI,cAACuD,GAAA,EAAD,2BALuC,IAKvC,aACI,cAACC,GAAA,EAAD,2BAHJ,IAGI,aAA4B3X,OADrBA,QAMtB6W,IAAeF,GAAMhC,OAClB,eAAC,WAAD,WACI,cAACiD,GAAA,EAAD,CAAYpI,GAAI,CAAEqI,GAAI,EAAGC,GAAI,GAA7B,mDAGA,eAACtH,GAAA,EAAD,CAAKhB,GAAI,CAAEuI,QAAS,OAAQC,cAAe,MAAOC,GAAI,GAAtD,UACI,cAACzH,GAAA,EAAD,CAAKhB,GAAI,CAAE0I,KAAM,cACjB,cAAC/O,EAAA,EAAD,CAAQ7H,QAlER,WAChBwV,EAAc,IAiEE,yBAIR,eAAC,WAAD,WAGKI,EAAcL,GAAYM,YAC3B,eAAC3G,GAAA,EAAD,CAAKhB,GAAI,CAAEuI,QAAS,OAAQC,cAAe,MAAOC,GAAI,GAAtD,UACI,cAAC9O,EAAA,EAAD,CACItI,MAAM,UACN8H,UAAW+M,GAAuB,IAAfmB,EACnBvV,QAASuV,IAAeF,GAAMhC,OAAS,EAlF5C,WACfmC,GAAc,SAACqB,GAAD,OAAoBA,EAAiB,MAOnC,WAChB9C,EAAQ,OA0EY7F,GAAI,CAAE4I,GAAI,GAJd,SAMKvB,IAAeF,GAAMhC,OAAS,EAAI,OAAS,iBAEhD,cAACnE,GAAA,EAAD,CAAKhB,GAAI,CAAE0I,KAAM,cACjB,cAAC/O,EAAA,EAAD,CAAQ7H,QAASuV,IAAeF,GAAMhC,OAAS,EAAIyC,EA3FpD,WAAON,GAAc,SAACqB,GAAD,OAAoBA,EAAiB,MA2FsBxP,UAAW+M,EAA1F,SACKmB,IAAeF,GAAMhC,OAAS,EAAI,SAAW,qBCzI7D0D,GAAoC,SAAC,GAAQ,gBACtD,MAA8BlY,oBAAS,GAAvC,mBAAOuM,EAAP,KAAgBC,EAAhB,KACA,EAAwBxM,mBAA2B,MAAnD,mBAAO6D,EAAP,KAAamS,EAAb,KACQzW,EAAU4Y,eAAV5Y,MACFsX,EAAWC,eAEjBpI,qBAAU,WACN,IAAI0J,GAAY,EAQhB,OAPAxT,GAAMoB,IAAN,kBAAqBzG,EAAMuE,KAAMoC,MAAK,SAACX,GAC/B6S,IACApC,EAAQzQ,EAASc,KAAKA,MACtBmG,GAAW,OAIZ,WACH4L,GAAY,KAEjB,IAEH,IAAMnC,EAAe,SAAC9I,GAClBtJ,GAAQmS,EAAQ,2BACTnS,GADQ,mBAEVsJ,EAAMM,OAAO3N,KAAOqN,EAAMM,OAAOC,UAY1C,OAAGnB,EACQ,cAACoB,GAAA,EAAD,CAAkBC,KAAM,KAG3B,uBAAMnO,UAAU,YAAhB,UACJ,2CACA,qBAAKwN,IAAG,OAAEpJ,QAAF,IAAEA,OAAF,EAAEA,EAAMiJ,QAASE,IAAG,OAAEnJ,QAAF,IAAEA,OAAF,EAAEA,EAAMiJ,UACpC,sBAAKrN,UAAU,kBAAf,UACI,cAACc,EAAA,EAAD,CACIC,WAAS,EACTX,MAAM,kBACNwW,WAAS,EACTC,QAAS,EACT5I,MAAO7J,EAAMgJ,YAAN,OAAoBhJ,QAApB,IAAoBA,OAApB,EAAoBA,EAAMgJ,YAAc,GAC/C/M,KAAK,cACLL,UAAU,mBACV+N,SAAUyI,IAEd,cAAC1V,EAAA,EAAD,CACIC,WAAS,EACTX,MAAM,OACN0B,YAAY,iBACZmM,MAAO7J,EAAM0S,KAAN,OAAa1S,QAAb,IAAaA,OAAb,EAAaA,EAAM0S,KAAO,GACjCzW,KAAK,OACLL,UAAU,mBACV+N,SAAUyI,IAGd,cAACjN,EAAA,EAAD,CAAQ7H,QApCK,WACjByD,GAAMyT,IAAN,kBAAqB9Y,EAAMuE,IAAMD,GAAMqC,MAAK,WACxC2Q,EAAS,YAAD,cAAahT,QAAb,IAAaA,OAAb,EAAaA,EAAMqJ,eAC5BpE,OAAM,SAACnI,GAAD,OAAWwF,QAAQC,IAAIzF,OAiCGZ,QAAQ,YAAvC,iCCzDCuY,GAAsC,WACjD,IAAQjZ,EAAkBC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,QAA1DH,cAGR,OADAqP,qBAAU,cAAU,IAElB,eAAC,IAAD,WACE,cAAC,EAAD,IACA,qBAAKjP,UAAU,kBAAf,SACE,eAAC,KAAD,WACE,cAAC,KAAD,CACEsS,KAAK,IACLwG,QACE,cAAC,GAAD,UACI,cAAC,GAAD,QAIR,cAAC,KAAD,CACExG,KAAK,UACLwG,QACE,cAAC,GAAD,UACE,cAAC,GAAD,QAIN,cAAC,KAAD,CACExG,KAAK,UACLwG,QACE,cAAC,GAAD,UACE,cAAC,GAAD,QAIN,cAAC,KAAD,CACExG,KAAK,QACLwG,QACE,cAAC,GAAD,UACE,cAAC,GAAD,QAIJ,cAAC,KAAD,CACIxG,KAAK,eACLwG,QACI,cAAC,GAAD,UACI,cAAC,GAAD,QAIZ,cAAC,KAAD,CACIxG,KAAK,UACLwG,QACI,cAAC,GAAD,UACI,cAAC,GAAD,QAIZ,cAAC,KAAD,CACIxG,KAAK,WACLwG,QACI,cAAC,GAAD,UACI,cAAC,GAAD,QAIZ,cAAC,KAAD,CACIxG,KAAK,YACLwG,QACI,cAAC,GAAD,UACI,cAAC,GAAD,aAQflZ,GAAiB,cAAC,GAAD,Q,mBC7EXmZ,OAVf,WACE,OACE,cAAC,IAAD,CAAUpU,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAamI,QAAS,KAAM9H,UAAWA,GAAvC,SACE,cAAC,GAAD,SCTRgU,IAASnQ,OACP,cAAC,IAAMoQ,WAAP,UACE,cAAC,GAAD,MAEF1O,SAAS2O,eAAe,U","file":"static/js/main.42114995.chunk.js","sourcesContent":["import React from \"react\";\r\nimport InstagramIcon from \"@mui/icons-material/Instagram\";\r\nimport \"App.scss\";\r\n\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"store\";\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\ninterface NavbarProps {}\r\n\r\nexport const Navbar: React.FC<NavbarProps> = () => {\r\n  const { authenticated } = useSelector((state: RootState) => state.auth);\r\n  return (\r\n    <div className=\"navbar\">\r\n      {authenticated ? (\r\n        <div className=\"nav-content\">\r\n          <Link to=\"/home\" className=\"insta-logo\">Instakilogram</Link>\r\n\r\n          <div className=\"nav-icons\">\r\n            <Link to=\"/addPost\"><i className=\"far fa-plus-square\"/></Link>\r\n            {/*<i className=\"far fa-heart\"/>*/}\r\n\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"nav-content\">\r\n          <p className=\"insta-logo\">Instakilogram</p>\r\n          <InstagramIcon fontSize=\"large\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport {IconButton, InputAdornment, TextField} from \"@mui/material\";\r\nimport React, {useState} from \"react\";\r\nimport {useFormContext} from \"react-hook-form\";\r\n\r\ninterface PasswordInputProps {\r\n  label: string;\r\n  name: string;\r\n  variant: \"standard\" | \"filled\" | \"outlined\";\r\n}\r\n\r\nexport const PasswordInput: React.FC<PasswordInputProps> = ({\r\n  label,\r\n  name,\r\n  variant,\r\n}) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const toggle = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n  } = useFormContext();\r\n  return (\r\n    <TextField\r\n      {...register(name)}\r\n      label={label}\r\n      name={name}\r\n      fullWidth\r\n      type={showPassword ? \"text\" : \"password\"}\r\n      color=\"primary\"\r\n      variant={variant}\r\n      error={!!errors[name]}\r\n      helperText={errors[name] ? errors[name]?.message : \"\"}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"start\">\r\n            <IconButton onClick={toggle}>\r\n              {showPassword ? (\r\n                <VisibilityIcon style={{ fill: \"#989898\" }} />\r\n              ) : (\r\n                <VisibilityOffIcon style={{ fill: \"#989898\" }} />\r\n              )}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import TextField from \"@mui/material/TextField\";\r\nimport React from \"react\";\r\nimport { useFormContext } from \"react-hook-form\";\r\n\r\ninterface TextInputProps {\r\n  label: string;\r\n  name: string;\r\n  placeholder: string;\r\n  type: string;\r\n  variant: \"standard\" | \"filled\" | \"outlined\";\r\n}\r\n\r\nexport const TextInput: React.FC<TextInputProps> = ({\r\n  label,\r\n  name,\r\n  placeholder,\r\n  type,\r\n  variant,\r\n}) => {\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n  } = useFormContext();\r\n  return (\r\n    <TextField\r\n      {...register(name)}\r\n      label={label}\r\n      name={name}\r\n      placeholder={placeholder}\r\n      fullWidth\r\n      type={type}\r\n      color=\"primary\"\r\n      variant={variant}\r\n      error={!!errors[name]}\r\n      helperText={errors[name] ? errors[name]?.message : \"\"}\r\n    />\r\n  );\r\n};\r\n","import { User } from 'models/UserModel';\r\nimport { PostModel } from 'models/PostModel';\r\n\r\nexport const SIGN_UP = \"SIGN_UP\";\r\nexport const SIGN_OUT = \"SIGN_OUT\";\r\nexport const SIGN_IN_SOCIAL = \"SIGN_IN_SOCIAL\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\nexport const RESET_AUTH = \"RESET_AUTH\";\r\n\r\nexport const GET_USER_BY_ID = \"GET_USER_BY_ID\";\r\nexport const GET_USER_POSTS = \"GET_USER_POSTS\";\r\nexport const LIKE_USER_POST = \"LIKE_USER_POST\";\r\nexport const ADD_USER_COMMENT = \"ADD_USER_POST\";\r\nexport const FOLLOW_USER = \"FOLLOW_USER\";\r\nexport const SET_AVATAR = \"SET_AVATAR\";\r\nexport const SET_NAME = \"SET_NAME\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const SET_LOADING_USER = \"SET_LOADING_USER\";\r\n\r\n\r\nexport const SET_POSTS = \"SET_POSTS\";\r\nexport const LIKE_POST = \"LIKE_POST\";\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const DELETE_POST_COMMENT = \"DELETE_POST_COMMENT\";\r\nexport const DELETE_USER_COMMENT = \"DELETE_USER_COMMENT\";\r\nexport const SET_LOADING_POST = \"SET_LOADING_POST\";\r\n\r\n// ----AUTHENTICATION----\r\n\r\ninterface SetUserAction {\r\n    type: typeof SIGN_UP,\r\n    payload: {\r\n        user: User,\r\n        token: string\r\n    }\r\n}\r\n\r\ninterface SignOutAction {\r\n    type: typeof SIGN_OUT,\r\n}\r\n\r\ninterface ResetAction {\r\n    type: typeof RESET_AUTH,\r\n}\r\n\r\ninterface SignInSocialAction {\r\n    type: typeof SIGN_IN_SOCIAL,\r\n    //payload: string;\r\n}\r\n\r\n// ----USER ACTIONS ----\r\n\r\ninterface GetUserByIdAction{\r\n    type: typeof GET_USER_BY_ID,\r\n    payload: User\r\n}\r\n\r\ninterface GetUserPosts{\r\n    type: typeof GET_USER_POSTS,\r\n    payload: {\r\n        posts: PostModel[],\r\n        currentPage: number,\r\n        hasNextPage: boolean,\r\n    }\r\n}\r\n\r\ninterface FollowUserAction{\r\n    type: typeof FOLLOW_USER,\r\n    payload: User\r\n}\r\n\r\ninterface SetAvatarAction {\r\n    type: typeof SET_AVATAR,\r\n    payload: string;\r\n}\r\n\r\ninterface SetNameAction {\r\n    type: typeof SET_NAME,\r\n    payload: string;\r\n}\r\n\r\ninterface LikeUserPostAction{\r\n    type: typeof  LIKE_USER_POST,\r\n    payload: PostModel\r\n}\r\n\r\ninterface AddUserComment{\r\n    type: typeof ADD_USER_COMMENT,\r\n    payload: PostModel\r\n}\r\n\r\ninterface DeletePostAction {\r\n    type: typeof DELETE_POST,\r\n    payload: number\r\n}\r\n\r\ninterface SetLoadingUserAction{\r\n    type: typeof SET_LOADING_USER,\r\n    payload: boolean;\r\n}\r\n\r\n\r\n\r\n// ----POST----\r\n\r\ninterface SetPostsAction {\r\n    type: typeof SET_POSTS,\r\n    payload: {\r\n        posts: PostModel[],\r\n        currentPage: number,\r\n        hasNextPage: boolean,\r\n    }\r\n}\r\n\r\n\r\ninterface LikePostAction{\r\n    type: typeof LIKE_POST,\r\n    payload: PostModel\r\n}\r\n\r\ninterface AddCommentAction{\r\n    type: typeof ADD_COMMENT,\r\n    payload: PostModel\r\n}\r\n\r\ninterface DeletePostCommentAction{\r\n    type: typeof DELETE_POST_COMMENT,\r\n    payload: PostModel\r\n}\r\n\r\ninterface DeleteUserCommentAction{\r\n    type: typeof DELETE_USER_COMMENT,\r\n    payload: PostModel\r\n}\r\n\r\ninterface SetLoadingPostAction{\r\n    type: typeof SET_LOADING_POST,\r\n    payload: boolean;\r\n}\r\n\r\n\r\n// ----STATE----\r\n\r\ninterface SetLoadingAction {\r\n    type: typeof SET_LOADING,\r\n    payload: boolean\r\n}\r\n\r\n\r\nexport type AuthActionsTypes = SetUserAction | SignOutAction | SignInSocialAction | SetLoadingAction | SetAvatarAction\r\n    | SetNameAction | ResetAction;\r\n\r\nexport type  UserActionTypes = GetUserByIdAction | FollowUserAction | SetAvatarAction\r\n    | SetNameAction | DeleteUserCommentAction | GetUserPosts | LikeUserPostAction | AddUserComment | DeletePostAction | SetLoadingUserAction;\r\n\r\nexport type PostActionsTypes = SetPostsAction | LikePostAction | AddCommentAction\r\n    | DeletePostCommentAction | SetLoadingPostAction;","import {PostState} from \"models/PostModel\";\r\nimport {\r\n    ADD_COMMENT,\r\n    DELETE_POST_COMMENT,\r\n    LIKE_POST,\r\n    PostActionsTypes,\r\n    SET_LOADING_POST,\r\n    SET_POSTS\r\n} from \"store/types/types\";\r\n//import update from 'react-addons-update';\r\n\r\n\r\nconst initialState: PostState = {\r\n    posts: null,\r\n    postLoading: false,\r\n    currentPage: 0,\r\n    hasNextPage: true\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state = initialState, action: PostActionsTypes) => {\r\n    switch(action.type){\r\n        case SET_LOADING_POST:\r\n            return {\r\n                ...state,\r\n                postLoading: action.payload\r\n            }\r\n        case SET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.payload.posts,\r\n                currentPage: action.payload.currentPage,\r\n                hasNextPage: action.payload.hasNextPage,\r\n                postLoading: false,\r\n            }\r\n        case LIKE_POST:\r\n        case ADD_COMMENT:\r\n        case DELETE_POST_COMMENT:\r\n            return {\r\n                ...state,\r\n                posts: state.posts!.map(post => post.id === action.payload.id ? action.payload : post),\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n }\r\n\r\n","import {AuthState} from \"models/Authentication\";\r\nimport {\r\n    AuthActionsTypes,\r\n    RESET_AUTH,\r\n    SET_AVATAR,\r\n    SET_LOADING,\r\n    SET_NAME,\r\n    SIGN_IN_SOCIAL,\r\n    SIGN_OUT,\r\n    SIGN_UP\r\n} from \"store/types/types\";\r\n\r\n\r\nexport const initialState: AuthState = {\r\n    user: null,\r\n    authenticated: false,\r\n    token: '',\r\n    authLoading: false\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state = initialState, action: AuthActionsTypes) => {\r\n    switch(action.type){\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                authLoading: action.payload,\r\n            }\r\n        case SIGN_UP:\r\n            return {\r\n                ...state,\r\n                user: action.payload.user,\r\n                token: action.payload.token,\r\n                authenticated: true,\r\n                authLoading: false,\r\n            }\r\n        case RESET_AUTH:\r\n        case SIGN_OUT:\r\n            return {\r\n                ...state,\r\n                token: '',\r\n                authenticated: false,\r\n                user: null,\r\n                authLoading: false,\r\n            }\r\n        case SIGN_IN_SOCIAL:\r\n            return {\r\n                ...state,\r\n                authLoading: false,\r\n            }\r\n        case SET_AVATAR:\r\n            return {\r\n                ...state,\r\n                user: state.user && {\r\n                    ...state.user,\r\n                    avatar_url: action.payload,\r\n                },\r\n            }\r\n        case SET_NAME:\r\n            return {\r\n                ...state,\r\n                user: state.user && {\r\n                    ...state.user,\r\n                    name: action.payload,\r\n                },\r\n            }\r\n        default:\r\n            return state;\r\n        \r\n    }\r\n }","import {UserState} from \"models/UserModel\";\r\nimport {\r\n    DELETE_POST,\r\n    DELETE_USER_COMMENT,\r\n    FOLLOW_USER,\r\n    GET_USER_BY_ID,\r\n    GET_USER_POSTS,\r\n    LIKE_USER_POST,\r\n    SET_AVATAR,\r\n    SET_LOADING_USER,\r\n    UserActionTypes\r\n} from \"../types/types\";\r\n\r\nconst initialState: UserState = {\r\n    user: null,\r\n    posts: null,\r\n    userLoading: false,\r\n    currentPage: 0,\r\n    hasNextPage: true,\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state = initialState, action: UserActionTypes) => {\r\n    switch (action.type) {\r\n        case SET_LOADING_USER:\r\n            return{\r\n                ...state,\r\n                userLoading: action.payload\r\n            }\r\n        case GET_USER_BY_ID:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                posts: action.payload.posts,\r\n                userLoading: false,\r\n            }\r\n        case GET_USER_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.payload.posts,\r\n                currentPage: action.payload.currentPage,\r\n                hasNextPage: action.payload.hasNextPage,\r\n            }\r\n        case FOLLOW_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                userLoading: false,\r\n            }\r\n        case SET_AVATAR:\r\n            return {\r\n                ...state,\r\n                user: state.user && {\r\n                    ...state.user,\r\n                    avatar_url: action.payload,\r\n                },\r\n                userLoading: false,\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts!.filter(post => post.id !== action.payload),\r\n                userLoading: false\r\n            }\r\n        case LIKE_USER_POST:\r\n        case DELETE_USER_COMMENT:\r\n            return {\r\n                ...state,\r\n                posts: state.posts!.map(post => post.id === action.payload.id ? action.payload : post),\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport postReducer from './reducers/postReducer';\r\nimport authReducer from './reducers/authReducer';\r\nimport { persistStore } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport persistReducer from 'redux-persist/es/persistReducer';\r\nimport userReducer from \"./reducers/userReducer\";\r\n\r\nexport const persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['auth']\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    posts: postReducer,\r\n    auth: authReducer,\r\n    userReducer: userReducer\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = createStore(\r\n    persistedReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n)\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor }\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import axios, {AxiosRequestConfig, AxiosResponse} from 'axios';\r\nimport {store} from '../store';\r\nimport {RESET_AUTH} from \"../store/types/types\"\r\n\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\n\r\nconst axiosCustom = axios.create({\r\n    baseURL: baseURL\r\n})\r\n\r\naxiosCustom.interceptors.request.use(function (req: AxiosRequestConfig) {\r\n    req.headers!.authorization = `Bearer ${store.getState().auth.token}`;\r\n    return req;\r\n})\r\n\r\naxiosCustom.interceptors.response.use(function (response :AxiosResponse) {return response;\r\n}, function (error) {\r\n    if(error.response.status === 401) {\r\n        store.dispatch({type: RESET_AUTH});\r\n    }\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default axiosCustom;","import axios from \"utils/axiosInstance\";\r\nimport {passwordResetData, signInData, signUpData} from \"models/Authentication\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {RootState} from \"store\";\r\nimport {AuthActionsTypes, RESET_AUTH, SET_AVATAR, SET_LOADING, SET_NAME, SIGN_OUT, SIGN_UP} from \"store/types/types\";\r\n//import {passwordChange} from\r\n\r\n\r\nexport const signUp = (data: signUpData): ThunkAction<void, RootState, null, AuthActionsTypes> => {\r\n    return dispatch => {\r\n        dispatch(setLoadingAuth(true));\r\n        try{\r\n           axios.post('./register', data\r\n           ).then\r\n           ((response: any) => {\r\n            const user = response.data.data.user;\r\n            const token = response.data.data.token;\r\n\r\n            dispatch({\r\n                type: SIGN_UP,\r\n                payload: {\r\n                    user,\r\n                    token\r\n                }\r\n            })\r\n           }).catch((error) => console.log(error))\r\n        }\r\n        catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const signIn = (data: signInData): ThunkAction<void, RootState, null, AuthActionsTypes> => {\r\n    return dispatch => {\r\n        dispatch(setLoadingAuth(true));\r\n        try{\r\n           axios.post('/login', data\r\n           ).then\r\n           ((response) => {\r\n               console.log(response)\r\n\r\n                const user = response.data.data.user;\r\n                const token = response.data.data.token;\r\n\r\n                dispatch({\r\n                    type: SIGN_UP,\r\n                    payload: {\r\n                        user,\r\n                        token\r\n                    }\r\n                })\r\n            //setLoading(false);\r\n           }).catch((error) => console.log(error))\r\n        }\r\n        catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const signOut = (): ThunkAction<void, RootState, null, AuthActionsTypes> => {\r\n    return dispatch => {\r\n        dispatch(setLoadingAuth(true));\r\n        try{\r\n            axios.post('./logout').then(() => {\r\n                dispatch({\r\n                    type: SIGN_OUT\r\n                })\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n        }\r\n        catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const signInSocial = (passedToken: string, social: \"google\" | \"github\"): ThunkAction<void, RootState, null, AuthActionsTypes> => {\r\n    return dispatch => {\r\n        dispatch(setLoadingAuth(true));\r\n        try{\r\n            axios.get(`./login/${social}/callback?token=${passedToken}`,\r\n                {\r\n                    params: {\r\n                        token: passedToken\r\n                    }\r\n                }).then((response) => {\r\n                    console.log(response)\r\n                    const user = response.data.data.user;\r\n                    const token = response.data.data.token;\r\n                    console.log(token);\r\n                    dispatch({\r\n                        type: SIGN_UP,\r\n                        payload: {\r\n                            user,\r\n                            token\r\n                        }\r\n                    })\r\n                console.log(response.data.data);\r\n            })\r\n        }\r\n        catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const passwordReset = (data: passwordResetData): ThunkAction<void, RootState, null, AuthActionsTypes> => {\r\n    return dispatch => {\r\n        try {\r\n            axios.post('./password-change', data\r\n            ).then\r\n            ((response: any) => {\r\n                console.log(response);\r\n            }).catch((error) => console.log(error))\r\n        } catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const setAvatar = (loadedFile: File): ThunkAction<void, RootState, null, AuthActionsTypes> => {\r\n    return dispatch => {\r\n        try{\r\n            const loadedAvatar = new FormData();\r\n            loadedAvatar.append('avatar', loadedFile);\r\n            axios.post('./users', loadedAvatar, {\r\n                params: {\r\n                    _method: 'patch',\r\n                },\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }}\r\n            ).then((response) => {\r\n                console.log(response.data.data.avatar_url);\r\n                dispatch({\r\n                    type: SET_AVATAR,\r\n                    payload: response.data.data.avatar_url\r\n                });\r\n            }).catch((error) => console.log(error));\r\n\r\n        }\r\n        catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const changeUsername = (name: string): ThunkAction<void, RootState, null, AuthActionsTypes> => {\r\n    return dispatch => {\r\n        try{\r\n            const newName = new FormData();\r\n            newName.append('name', name);\r\n            axios.post('./users', newName, {\r\n                params: {\r\n                    _method: 'patch',\r\n                },\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }}\r\n            ).then((response) => {\r\n                const changedUsername = response.data.data.name;\r\n                dispatch({\r\n                    type: SET_NAME,\r\n                    payload: changedUsername\r\n                });\r\n            }).catch((error) => console.log(error));\r\n\r\n        }\r\n        catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const setLoadingAuth = (loadingValue: boolean): ThunkAction<void, RootState, null, AuthActionsTypes> => {\r\n    return dispatch => {\r\n        try {\r\n            dispatch({\r\n                type: SET_LOADING,\r\n                payload: loadingValue\r\n            });\r\n        } catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetAuth = (): ThunkAction<void, RootState, null, AuthActionsTypes> => {\r\n        return dispatch => {\r\n            try {\r\n                dispatch({\r\n                    type: RESET_AUTH,\r\n                });\r\n            } catch (error: any) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n","import * as yup from \"yup\";\r\n\r\nconst REGEX_PASSWORD =\r\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,15}$/;\r\n\r\nconst passwordConfirmationValidation = yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .min(6, \"Password is too short\")\r\n    .max(15, \"Password is too long\")\r\n    .matches(REGEX_PASSWORD, \"Password does not meet requirements.\");\r\n\r\nconst passwordValidation = yup\r\n    .string()\r\n    .required(\"You need to confirm your password\")\r\n    .min(6, \"Password is too short\")\r\n    .max(15, \"Password is too long\")\r\n    .matches(REGEX_PASSWORD, \"Password does not meet requirements.\");\r\n\r\nconst validationCredentials = {\r\n  email: yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n  password: passwordValidation,\r\n};\r\n\r\nexport const passwordSchema = yup.object().shape({\r\n  password: passwordValidation,\r\n  password_confirmation: passwordConfirmationValidation\r\n      });\r\n\r\nexport const signUpSchema = yup.object().shape({...validationCredentials,  password_confirmation: passwordConfirmationValidation,\r\n  name: yup.string()\r\n      .required(\"Name required\")\r\n      .min(6, \"Name is too short\")\r\n      .max(15, \"Name is too long\"\r\n)});\r\n\r\nexport const signInSchema = yup.object().shape(validationCredentials);","import {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport Button from \"@mui/material/Button\";\r\nimport \"App.scss\";\r\nimport {PasswordInput} from \"components/PasswordInput\";\r\nimport {TextInput} from \"components/TextInput\";\r\nimport {signInData} from \"models/Authentication\";\r\nimport React from \"react\";\r\nimport {FormProvider, useForm} from \"react-hook-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"store\";\r\nimport {signIn, signInSocial} from \"store/actions/authActions\";\r\nimport {signInSchema} from \"./ValidationSchema\";\r\nimport {Link} from \"react-router-dom\";\r\nimport GoogleLogin from 'react-google-login';\r\n// @ts-ignore\r\nimport LoginGithub from 'react-login-github';\r\n\r\ninterface SignInProps {}\r\n\r\nexport const SignIn: React.FC<SignInProps> = () => {\r\n    const {authLoading} = useSelector((state:RootState) => state.auth);\r\n  const action = useDispatch();\r\n  const methods = useForm<signInData>({\r\n    resolver: yupResolver(signInSchema),\r\n  });\r\n  const onSubmit = (data: signInData) => {\r\n    action(signIn(data));\r\n  };\r\n\r\n  const responseGoogle = (response: any) => {\r\n    action(signInSocial(response.accessToken, \"google\"));\r\n  }\r\n\r\n  const onSuccess = async (response: any) => {\r\n    action(signInSocial(response.code, \"github\"));\r\n  }\r\n\r\n  const onFailure = (response: any) => console.error(response);\r\n\r\n  return (\r\n    <div className=\"auth__wrapper\">\r\n      <div className=\"auth__header\">\r\n        <h1>Log in</h1>\r\n        <p>Sign up with one of following options.</p>\r\n      </div>\r\n      <div className=\"social-auth-container\">\r\n        <GoogleLogin\r\n            className=\"social-auth-container-button\"\r\n            clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID!}\r\n            onSuccess={responseGoogle}\r\n            onFailure={responseGoogle}\r\n            buttonText=\"Google\"\r\n            tag='button'\r\n            render={renderProps => (\r\n                <button className=\"social-auth-container-button social-auth-container-button-google\"\r\n                        onClick={renderProps.onClick}\r\n                        disabled={renderProps.disabled}>\r\n                  <i className=\"fab fa-google  social-auth-container-button-icon\" /></button>\r\n            )}\r\n            icon={false}\r\n\r\n            cookiePolicy={'single_host_origin'}\r\n        />\r\n        <LoginGithub clientId={process.env.REACT_APP_GITHUB_CLIENT_ID}\r\n                     className=\"social-auth-container-button social-auth-container-button-github\"\r\n                     scope={'user:email'}\r\n                     onSuccess={onSuccess}\r\n                     buttonText={<i className=\"fab fa-github social-auth-container-button-icon\"/>}\r\n                     onFailure={onFailure}/>\r\n      </div>\r\n      <FormProvider {...methods}>\r\n        <form\r\n          onSubmit={methods.handleSubmit(onSubmit)}\r\n          className=\"form form-sign-in\"\r\n        >\r\n          <TextInput\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            placeholder=\"email@email.com\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n          />\r\n          <PasswordInput label=\"Password\" name=\"password\" variant=\"outlined\" />\r\n          {authLoading ? (\r\n            <Button variant=\"outlined\" color=\"primary\" disabled>\r\n                Loading...\r\n            </Button>\r\n          ) : (\r\n            <Button type=\"submit\" variant=\"contained\">\r\n              Sign In\r\n            </Button>\r\n          )}\r\n\r\n\r\n        </form>\r\n        <div className=\"auth__footer\">\r\n        <p>Don't have an account? </p>\r\n        <Link to=\"/signup\">Sign up</Link>\r\n      </div>\r\n      </FormProvider>\r\n    </div>\r\n  );\r\n};\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { PasswordInput } from \"components/PasswordInput\";\r\nimport { TextInput } from \"components/TextInput\";\r\nimport { signUpData } from \"models/Authentication\";\r\nimport React from \"react\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { signUpSchema } from \"./ValidationSchema\";\r\nimport \"App.scss\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signUp } from \"store/actions/authActions\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\ninterface SignUpProps {}\r\n\r\nexport const SignUp: React.FC<SignUpProps> = () => {\r\n  const action = useDispatch();\r\n  const methods = useForm<signUpData>({\r\n    resolver: yupResolver(signUpSchema),\r\n  });\r\n  const [password, confirmedPassword] = methods.watch(['password' ,'password_confirmation']);\r\n  const onSubmit = (data: signUpData) => {\r\n    action(signUp(data));\r\n  };\r\n  return (\r\n    <div className=\"auth__wrapper\">\r\n      <div className=\"auth__header\">\r\n        <h1>Sign up</h1>\r\n      </div>\r\n\r\n      <FormProvider {...methods}>\r\n        <form\r\n          onSubmit={methods.handleSubmit(onSubmit)}\r\n          className=\"form form-sign-up\"\r\n        >\r\n          <TextInput\r\n            label=\"Username\"\r\n            name=\"name\"\r\n            placeholder=\"Username\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n          />\r\n          <TextInput\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            placeholder=\"email@email.com\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n          />\r\n          <PasswordInput label=\"Password\" name=\"password\" variant=\"outlined\" />\r\n          <PasswordInput\r\n            label=\"Confirm Password\"\r\n            name=\"password_confirmation\"\r\n            variant=\"outlined\"\r\n          />\r\n          {password !== undefined && password === confirmedPassword ? <Button type=\"submit\" variant=\"contained\">\r\n            Sign up\r\n          </Button> : <Button type=\"submit\" variant=\"contained\" disabled>\r\n            Sign up\r\n          </Button>}\r\n        </form>\r\n      </FormProvider>\r\n\r\n      <span className=\"auth__footer\">\r\n        <p>Already have an account? </p>\r\n        <Link to=\"/signin\" className=\"sign-in__footer__link\">Sign in</Link>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import Dialog from '@mui/material/Dialog';\r\nimport React, {Dispatch, FC, SetStateAction} from 'react';\r\nimport {createPortal} from \"react-dom\";\r\nimport \"App.scss\";\r\n\r\n\r\ninterface ModalProps {\r\n    open: boolean;\r\n    setOpen:  Dispatch<SetStateAction<boolean>>;\r\n    children: JSX.Element;\r\n    scrollType?: \"paper\" | \"body\";\r\n    maxWidth?: \"xl\" | \"md\" | \"sm\" | \"xs\" | \"lg\" | false;\r\n    fullWidth?: boolean;\r\n}\r\n\r\nexport const Modal: FC<ModalProps> = ({ open, setOpen, children, scrollType, maxWidth, fullWidth}) => {\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return createPortal((\r\n      <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          scroll={scrollType ? scrollType : \"body\"}\r\n          className=\"modal\"\r\n          maxWidth={maxWidth}\r\n          fullWidth={fullWidth}\r\n      >\r\n          {children}\r\n      </Dialog>\r\n    ), document.body);\r\n }","import {\r\n    ADD_COMMENT,\r\n    DELETE_POST_COMMENT,\r\n    LIKE_POST,\r\n    PostActionsTypes,\r\n    SET_LOADING_POST,\r\n    SET_POSTS\r\n} from \"store/types/types\";\r\nimport {RootState} from \"store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport axios from \"utils/axiosInstance\";\r\nimport {PostModel} from \"models/PostModel\";\r\nimport {Comment} from \"../../models/CommentModel\";\r\n\r\n\r\nexport const setPosts = (page: number, passedPosts: PostModel[]): ThunkAction<void, RootState, null, PostActionsTypes> => {\r\n    return dispatch => {\r\n        try{axios.get(\"./posts\", {\r\n                params: {\r\n                    page\r\n                },\r\n                headers: {\r\n                  Accept: \"application/json\",\r\n                },\r\n              }).then((res)  => {\r\n            //TODO sprawdzic czy nie ma bledu z passedPosts\r\n                  const posts = [...passedPosts, ...res.data.data.data];\r\n                  const hasNextPage = Boolean(res.data.data.next_page_url);\r\n                  const currentPage = res.data.data.current_page;\r\n                  console.log(hasNextPage);\r\n\r\n                  console.log(res.data.data.next_page_url);\r\n                  console.log(res.data.data);\r\n                  dispatch({\r\n                      type: SET_POSTS,\r\n                      payload: {\r\n                          posts,\r\n                          currentPage,\r\n                          hasNextPage,\r\n                      }\r\n                  })\r\n              }).catch((error) => console.log(error));\r\n        }\r\n        catch (error: any) {\r\n            console.log(error);\r\n        }\r\n        finally {\r\n            setLoadingPost(false);\r\n        }\r\n    }\r\n}\r\n\r\nexport const likePost = (post: PostModel): ThunkAction<void, RootState, null, PostActionsTypes> => {\r\n    return dispatch => {\r\n        try{\r\n            axios.head(`/posts/${post.id}/like`, {\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                },\r\n            }).then(()  => {\r\n                post.likes_count += post.isLiked ? -1 : 1;\r\n                post.isLiked = !post.isLiked;\r\n                dispatch({\r\n                    type: LIKE_POST,\r\n                    payload: post\r\n                })\r\n            }).catch((error) => console.log(error))\r\n        }\r\n        catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const addComment = (comment: string, post: PostModel, setLoading: React.Dispatch<React.SetStateAction<boolean>>): ThunkAction<void, RootState, null, PostActionsTypes> => {\r\n    return dispatch => {\r\n        try{\r\n            axios.post(\"./comments\", {content: comment, post_id: post.id}, {\r\n\r\n            }).then((response) => {\r\n                console.log(response);\r\n                const location = response.data.data.location;\r\n                axios.get(`.${location}`).then((response) => {\r\n                    post.comments.push(response.data.data);\r\n                    console.log(response);\r\n                    dispatch({\r\n                        type: ADD_COMMENT,\r\n                        payload: post\r\n                    })\r\n                    setLoading(false);\r\n                }).catch((error) => console.log(error))\r\n            }).catch((error) => console.log(error));\r\n        }\r\n        catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const deletePostComment = (post: PostModel, comment: Comment): ThunkAction<void, RootState, null, PostActionsTypes> => {\r\n    return dispatch => {\r\n        try{\r\n            console.log(comment.id);\r\n            axios.delete(`./comments/${comment.id}`\r\n            ).then((response) => {\r\n                console.log(response);\r\n                const comments = post.comments.filter((com) => com.id !== comment.id);\r\n                console.log(comments);\r\n                dispatch({\r\n                    type: DELETE_POST_COMMENT,\r\n                    payload: {\r\n                        ...post,\r\n                        comments\r\n                    },\r\n                })\r\n            }).catch((error) => console.log(error));\r\n        }\r\n        catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const setLoadingPost = (loadingValue: boolean): ThunkAction<void, RootState, null, PostActionsTypes> => {\r\n    return dispatch => {\r\n        try{\r\n            dispatch({\r\n                type: SET_LOADING_POST,\r\n                payload: loadingValue\r\n            });\r\n        }\r\n        catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import {ThunkAction} from \"redux-thunk\";\r\nimport {RootState} from \"../index\";\r\nimport {\r\n    DELETE_USER_COMMENT,\r\n    FOLLOW_USER,\r\n    GET_USER_BY_ID,\r\n    GET_USER_POSTS,\r\n    UserActionTypes, LIKE_USER_POST, ADD_USER_COMMENT, DELETE_POST, SET_LOADING_USER\r\n} from \"../types/types\";\r\nimport axios from \"utils/axiosInstance\";\r\nimport {User} from \"../../models/UserModel\";\r\nimport {PostModel} from \"../../models/PostModel\";\r\nimport {Comment} from \"../../models/CommentModel\";\r\n\r\n\r\n\r\nexport const getUserById = (id: number): ThunkAction<void, RootState, null, UserActionTypes> => {\r\n    return dispatch => {\r\n        try{\r\n            axios.get(`./users/${id}`, {\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                },\r\n            }).then((response) => {\r\n                const user = response.data.data;\r\n                dispatch({\r\n                    type: GET_USER_BY_ID,\r\n                    payload: user as User\r\n                })\r\n            }).catch((error) => console.log(error))\r\n        }\r\n        catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const getUserPosts = (id: number, passedPosts: PostModel[], page: number): ThunkAction<void, RootState, null, UserActionTypes> => {\r\n    return dispatch => {\r\n        try{\r\n            axios.get(`./users/${id}/posts`, {\r\n                params:{\r\n                    page\r\n                },\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                },\r\n            }).then((res) => {\r\n                //TODO sprawdzic czy nie ma bledu\r\n                const posts = [...passedPosts, ...res.data.data.data];\r\n                const hasNextPage = Boolean(res.data.data.next_page_url);\r\n                const currentPage = res.data.data.current_page;\r\n                dispatch({\r\n                    type: GET_USER_POSTS,\r\n                    payload: {\r\n                        posts,\r\n                        currentPage,\r\n                        hasNextPage\r\n                    }\r\n                })\r\n            }).catch((error) => console.log(error))\r\n        }\r\n        catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const followUser = (user: User): ThunkAction<void, RootState, null, UserActionTypes> => {\r\n    return dispatch => {\r\n        try {\r\n            axios.head(`./users/${user.id}/follow`).then(() => {\r\n                user.followers_count += user.isFollowed ? -1 : +1;\r\n                user.isFollowed = !user.isFollowed;\r\n                dispatch({\r\n                    type: FOLLOW_USER,\r\n                    payload: user\r\n                })\r\n            }).catch((error) => console.log(error))\r\n        } catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const deletePost = (id: number): ThunkAction<void, RootState, null, UserActionTypes> => {\r\n    return dispatch => {\r\n        dispatch(setLoadingUser(true));\r\n        try{\r\n            axios.delete(`/posts/${id}`, {\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                },\r\n            }).then(()  => {\r\n                dispatch({\r\n                    type: DELETE_POST,\r\n                    payload: id\r\n                })\r\n            }).catch(error => console.log(error))\r\n        }\r\n        catch (error: any) {\r\n            console.log(error);\r\n        }\r\n        finally {\r\n            setLoadingUser(false);\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUserComment = (post: PostModel, comment: Comment): ThunkAction<void, RootState, null, UserActionTypes> => {\r\n    return dispatch => {\r\n        try{\r\n            axios.delete(`./comments/${comment.id}`\r\n            ).then((response) => {\r\n                console.log(response);\r\n                const comments = post.comments.filter((com) => com.id !== comment.id);\r\n                dispatch({\r\n                    type: DELETE_USER_COMMENT,\r\n                    payload: {\r\n                        ...post,\r\n                        comments\r\n                    },\r\n                })\r\n            }).catch((error) => console.log(error));\r\n        }\r\n        catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const addUserComment = (comment: string, post: PostModel, setLoading: React.Dispatch<React.SetStateAction<boolean>>): ThunkAction<void, RootState, null, UserActionTypes> => {\r\n    return dispatch => {\r\n        try{\r\n            axios.post(\"./comments\", {content: comment, post_id: post.id}, {\r\n\r\n            }).then((response) => {\r\n                console.log(response);\r\n                const location = response.data.data.location;\r\n                axios.get(`.${location}`).then((response) => {\r\n                    post.comments.push(response.data.data);\r\n                    console.log(response);\r\n                    dispatch({\r\n                        type: ADD_USER_COMMENT,\r\n                        payload: post\r\n                    })\r\n                    setLoading(false);\r\n                }).catch((error) => console.log(error))\r\n            }).catch((error) => console.log(error));\r\n        }\r\n        catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const likeUserPost = (post: PostModel): ThunkAction<void, RootState, null, UserActionTypes> => {\r\n    return dispatch => {\r\n        try{\r\n            axios.head(`/posts/${post.id}/like`, {\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                },\r\n            }).then(()  => {\r\n                post.likes_count += post.isLiked ? -1 : 1;\r\n                post.isLiked = !post.isLiked;\r\n                dispatch({\r\n                    type: LIKE_USER_POST,\r\n                    payload: post\r\n                })\r\n            }).catch((error) => console.log(error))\r\n        }\r\n        catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const setLoadingUser = (loadingValue: boolean): ThunkAction<void, RootState, null, UserActionTypes> => {\r\n    return dispatch => {\r\n        try{\r\n            dispatch({\r\n                type: SET_LOADING_USER,\r\n                payload: loadingValue\r\n            });\r\n        }\r\n        catch (error: any) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport {Comment} from \"../models/CommentModel\";\r\nimport {PostModel} from \"../models/PostModel\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deletePostComment} from \"../store/actions/postAction\";\r\nimport {deleteUserComment} from \"../store/actions/userActions\";\r\nimport {RootState} from \"store\";\r\n\r\ninterface CommentsProps {\r\n    comment: Comment;\r\n    post: PostModel;\r\n    deleteComment: typeof deletePostComment | typeof deleteUserComment;\r\n}\r\n\r\nexport const Comments: React.FC<CommentsProps> = ({comment, post, deleteComment}) => {\r\n    const authId = useSelector((state: RootState) => state.auth.user?.id);\r\n    const action = useDispatch();\r\n\r\n    const handleDeleteComment = () => {\r\n        action(deleteComment(post, comment));\r\n    }\r\n\r\n    return (\r\n        <div key={comment.id} className=\"post__comment\">\r\n            <p>\r\n                <Link to={`/profile/${post.id}`} className=\"post__username\">{comment.author.name}</Link>{comment.content}\r\n            </p>\r\n            {comment.author.id === authId ? <p className=\"post__comment--delete\" onClick={handleDeleteComment}>Delete</p> : <></>}\r\n        </div>\r\n    );\r\n}","import React, {ChangeEvent, FC, MouseEvent, useState} from 'react';\r\nimport {PostModel} from \"../models/PostModel\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport {IconButton} from \"@mui/material\";\r\nimport 'App.scss';\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    addComment,\r\n    deletePostComment,\r\n    likePost\r\n} from \"../store/actions/postAction\";\r\nimport {addUserComment, deleteUserComment, likeUserPost, deletePost} from \"../store/actions/userActions\";\r\nimport {User} from \"../models/UserModel\";\r\nimport {Link} from \"react-router-dom\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { RootState } from 'store';\r\nimport {Comments} from \"./Comments\";\r\nimport moment from \"moment\";\r\n\r\ninterface PostDialogProps {\r\n post: PostModel;\r\n user: User;\r\n setOpen?: React.Dispatch<React.SetStateAction<boolean>>;\r\n isOnWall : boolean;\r\n}\r\n\r\nexport const PostDialog: FC<PostDialogProps> = ({post, setOpen, user, isOnWall}) => {\r\n    const [comment, setComment] = useState(\"\");\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n    const [show, setShow] = useState(false);\r\n    const [like, setLike] = useState(post.isLiked);\r\n    const [likesCount, setLikesCount] = useState(post.likes_count);\r\n    const [loading, setLoading] = useState(false);\r\n    const authId = useSelector((state: RootState) => state.auth.user?.id);\r\n\r\n    const action = useDispatch();\r\n    const openMenu = Boolean(anchorEl);\r\n\r\n    const toggleLike = () => {\r\n        setLike(!like);\r\n        like ? setLikesCount(likesCount - 1) : setLikesCount(likesCount + 1);\r\n        isOnWall ? action(likePost(post)) : action(likeUserPost(post));\r\n    }\r\n\r\n    const toggle = () => {\r\n        setShow(!show);\r\n    };\r\n\r\n    const handleClick = (event: MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleCloseMenu = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        action(deletePost(id));\r\n        handleCloseMenu();\r\n    }\r\n\r\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) =>{\r\n        setComment(event.target.value);\r\n    }\r\n\r\n    const handleAddComment = () => {\r\n        setLoading(true);\r\n        isOnWall ? action(addComment(comment, post, setLoading)) : action(addUserComment(comment, post, setLoading));\r\n        setComment(\"\");\r\n    }\r\n\r\n    const { id, author, description, likes_count, comments, img_url } = post;\r\n    return (\r\n        <div className=\"post-dialog\">\r\n        <div className=\"post-dialog__header\">\r\n            <div className=\"post-dialog__author\">\r\n                <Avatar alt={user.name} src={user.avatar_url} className=\"post-dialog__header__author__avatar\" />\r\n                <p  className=\"post-dialog__author-name\">{user.name}</p>\r\n            </div>\r\n            {authId === post.author_id ? <IconButton className=\"post-dialog__menu\" onClick={handleClick}>\r\n                <MoreHorizIcon />\r\n            </IconButton> : <></>}\r\n\r\n        </div>\r\n\r\n        <img src={img_url} alt={user.name} />\r\n        <section className=\"post-dialog__content\">\r\n            <div className=\"post-dialog__buttons\">\r\n                {like ? <i className=\"fas fa-fire post-dialog__icon-filled\" onClick={toggleLike}/> : <i className=\"fas fa-fire\" onClick={toggleLike} />}\r\n                <i className=\"far fa-comment post-dialog__icon\" onClick={toggle}/>\r\n                <i className=\"far fa-bookmark post-dialog__icon\" />\r\n            </div>\r\n\r\n            <p className=\"post-dialog__likes\">Likes: {likesCount}</p>\r\n            <div className='post__description'><Link to={`/profile/${author.id}`} className=\"post__username post__username--author\">{author.name}</Link>\r\n                {description}</div>\r\n            <div className=\"post-comments\">\r\n                {comments && comments.map(comment => (\r\n                    <Comments key={comment.id} post={post} comment={comment}\r\n                              deleteComment={isOnWall ? deletePostComment : deleteUserComment}/>)\r\n                )}\r\n            </div>\r\n            <p className=\"post-dialog__update-time\">{`created at ${moment(post.created_at*1000).format('YYYY/MM/DD')}`}</p>\r\n            {show &&\r\n            <article className=\"post-dialog__comment-container\">\r\n                <input className=\"post-dialog__input\" placeholder=\"Add comment...\" onChange={handleChange} value={comment!}/>\r\n                {loading ? <CircularProgress size={30} /> : <button className=\"post-dialog__share-comment\" onClick={handleAddComment}>Share</button>}\r\n            </article>}\r\n        </section>\r\n        <Menu\r\n            id=\"basic-menu\"\r\n            anchorEl={anchorEl}\r\n            open={openMenu}\r\n            onClose={handleCloseMenu}\r\n            MenuListProps={{\r\n                \"aria-labelledby\": \"basic-button\",\r\n            }}\r\n        >\r\n            {user && user.id === post.author_id && <MenuItem onClick={handleDelete}>Delete</MenuItem>}\r\n            {user && user.id === post.author_id && <Link to={`/editPost`} state={{id: post.id}}><MenuItem>Edit</MenuItem></Link>}\r\n            <MenuItem onClick={handleCloseMenu}>Cancel</MenuItem>\r\n        </Menu>\r\n        </div>\r\n    );\r\n }","import MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport \"App.scss\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport {IconButton} from \"@mui/material\";\r\nimport {Modal} from \"./Modal\";\r\nimport {PostModel} from \"../models/PostModel\";\r\nimport {PostDialog} from \"./PostDialog\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deletePostComment, likePost} from \"../store/actions/postAction\";\r\nimport {Link} from 'react-router-dom';\r\nimport {Comment} from \"../models/CommentModel\";\r\nimport userReducer from \"../store/reducers/userReducer\";\r\nimport {RootState} from \"../store\";\r\nimport {Comments} from \"./Comments\";\r\nimport moment from \"moment\";\r\n\r\ninterface PostProps {\r\n  post: PostModel\r\n}\r\n\r\nexport const Post: React.FC<PostProps> = ({\r\n    post\r\n}) => {\r\n  const action = useDispatch();\r\n  const { description, isLiked, likes_count, comments, author} = post;\r\n  const [openPost, setOpenPost] = useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const authId = useSelector((state: RootState) => state.auth.user?.id);\r\n  const open = Boolean(anchorEl);\r\n  useEffect(() => {\r\n\r\n  }, [isLiked])\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    handleClose();\r\n    setOpenPost(true);\r\n  }\r\n\r\n  const toggle = () => {\r\n    action(likePost(post));\r\n  };\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post__nav\">\r\n        <div>\r\n          <Avatar alt=\"post\" src={author.avatar_url} />\r\n          <Link to={`/profile/${author.id}`} className=\"post__username\">{author.name}</Link>\r\n        </div>\r\n        <IconButton onClick={handleClick}>\r\n          <MoreHorizIcon />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"basic-menu\"\r\n          anchorEl={anchorEl}\r\n          open={open}\r\n          onClose={handleClose}\r\n          MenuListProps={{\r\n            \"aria-labelledby\": \"basic-button\",\r\n          }}\r\n        >\r\n          <MenuItem onClick={handleOpen}>Redirect to post</MenuItem>\r\n          <MenuItem onClick={handleClose}>Stop following</MenuItem>\r\n          <MenuItem onClick={handleClose}>Cancel</MenuItem>\r\n        </Menu>\r\n      </div>\r\n      <div>\r\n        <img className=\"post__img\" src={post.img_url} alt=\"instaphoto\" />\r\n        <div className=\"post__info\">\r\n          <div className=\"post__buttons\">\r\n            {isLiked ? <i className=\"fas fa-fire post-icon post-icon--filled\" onClick={toggle}/> :\r\n                <i className=\"fas fa-fire post-icon\" onClick={toggle} />}\r\n            <i className=\"far fa-bookmark post-icon\" />\r\n          </div>\r\n\r\n          <p className=\"post-likes\">Likes: {likes_count}</p>\r\n\r\n          <div className='post__description'><Link to={`/profile/${author.id}`} className=\"post__username post__username--author\">{author.name}</Link>\r\n            {description}</div>\r\n          <div className=\"post-comments\">\r\n            {comments && comments.slice(0,3).map(comment =>\r\n                <Comments key={comment.id} comment={comment} post={post} deleteComment={deletePostComment}/>\r\n            )}\r\n          </div>\r\n\r\n          <p className=\"post-creation-date\">{`created at ${moment(post.created_at*1000).format('YYYY/MM/DD')}`}</p>\r\n        </div>\r\n      </div>\r\n      <Modal open={openPost} setOpen={setOpenPost} fullWidth={true} maxWidth=\"sm\" children={<PostDialog post={post} user={post.author} setOpen={setOpenPost} isOnWall={true}/>} />\r\n    </div>\r\n  );\r\n};\r\n","import \"App.scss\";\r\nimport {Post} from \"components/Post\";\r\nimport {PostModel} from \"models/PostModel\";\r\nimport React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"store\";\r\nimport {setLoadingPost, setPosts} from \"store/actions/postAction\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Button from '@mui/material/Button';\r\n\r\ninterface HomeProps {}\r\n\r\nexport const Home: React.FC<HomeProps> = ({}) => {\r\n  const action = useDispatch();\r\n  const { posts, postLoading, hasNextPage, currentPage } = useSelector((state: RootState) => state.posts);\r\n\r\n  useEffect(() => {\r\n    action(setLoadingPost(true));\r\n    action(setPosts(1, []));\r\n  }, []);\r\n\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault();\r\n    hasNextPage && action(setPosts(currentPage+1, posts!));\r\n  }\r\n\r\n  if (postLoading) {\r\n    return (\r\n      <div className=\"home-wrapper\">\r\n        <CircularProgress size={40} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"home-wrapper\">\r\n      {posts &&\r\n        posts.map((post: PostModel) => (\r\n          <Post\r\n            key={post.id}\r\n            post={post}\r\n          />\r\n        ))}\r\n      {hasNextPage && <Button onClick={handleClick}>Load more posts...</Button>}\r\n    </div>\r\n  );\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { Navigate, useLocation } from \"react-router-dom\";\r\nimport { RootState } from \"store\";\r\n\r\ninterface ProtectedRouteProps {\r\n  children: JSX.Element;\r\n}\r\n\r\nexport const ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children }) => {\r\n  const { authenticated } = useSelector((state: RootState) => state.auth);\r\n\r\n  //   if (loading) {\r\n  //     return <p>Checking authenticaton..</p>;\r\n  //   }\r\n\r\n  if (authenticated) {\r\n    return children;\r\n  }\r\n\r\n  return <Navigate to=\"/signin\" />;\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { RootState } from \"store\";\r\n\r\n\r\ninterface PublicRouteProps {\r\n  children: JSX.Element;\r\n}\r\n\r\nexport const PublicRoute: React.FC<PublicRouteProps> = ({ children }) => {\r\n  const { authenticated } = useSelector((state: RootState) => state.auth);\r\n\r\n  if (authenticated) {\r\n    return <Navigate to=\"/home\" />;\r\n  }\r\n\r\n  return children;\r\n};\r\n","import * as React from 'react';\r\nimport BottomNavigation from '@mui/material/BottomNavigation';\r\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport 'App.scss';\r\nimport {Link} from 'react-router-dom';\r\nimport {SvgIconProps} from '@mui/material/SvgIcon';\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../store\";\r\n\r\ninterface ListOfButtonTypes {\r\n    value: string;\r\n    icon: React.ReactElement<SvgIconProps>;\r\n}\r\n\r\ninterface BottomNavbarProps {\r\n\r\n}\r\n\r\nexport const BottomNavbar: React.FC<BottomNavbarProps> = () => {\r\n    const [value, setValue] = React.useState(\"home\");\r\n    const { user } = useSelector((state: RootState) => state.auth)\r\n    const ListOfButtons: ListOfButtonTypes[] = [\r\n        {\r\n            value: \"home\",\r\n            icon: <HomeIcon />,\r\n        },\r\n        {\r\n            value: \"search\",\r\n            icon: <SearchIcon />,\r\n        },\r\n        {\r\n            value: `profile/${user!.id}`,\r\n            icon:<Avatar\r\n                alt={user!.name}\r\n                src={user!.avatar_url}\r\n                sx={{ width: 24, height: 24 }}\r\n            />\r\n        }\r\n    ];\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n  return (\r\n          <BottomNavigation value={value} onChange={handleChange} className=\"bottom-navbar\">\r\n              {ListOfButtons.map((button) => {\r\n                  return (\r\n                      <BottomNavigationAction\r\n                          key={button.value}\r\n                          component={Link}\r\n                          to={`/${button.value}`}\r\n                          value={button.value}\r\n                          icon={button.icon}\r\n                      />\r\n                  );\r\n              })}\r\n          </BottomNavigation>\r\n\r\n  );\r\n }","import React, {useState} from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Drawer from '@mui/material/Drawer';\r\n\r\ninterface DrawerProps {\r\n    list?: JSX.Element;\r\n    drawerTitle: string;\r\n}\r\n\r\nexport const DrawerComponent: React.FC<DrawerProps> = ({drawerTitle, list}) => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const toggle = () => {\r\n        setVisible(!visible);\r\n    };\r\n\r\n    const drawerContent = () => (\r\n        <Box\r\n            role=\"presentation\"\r\n            onClick={toggle}\r\n            onKeyDown={toggle}\r\n        >\r\n            {list}\r\n        </Box>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={toggle} variant=\"outlined\" color=\"primary\">\r\n                {drawerTitle}\r\n            </Button>\r\n            <Drawer open={visible} onClose={toggle} anchor=\"bottom\">\r\n                {drawerContent()}\r\n            </Drawer>\r\n        </div>\r\n  );\r\n }","import React from 'react'\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {PostModel} from \"../models/PostModel\";\r\n\r\ninterface SimplePostDialogProps {\r\n    post: PostModel\r\n}\r\n\r\nexport const SimplePostDialog: React.FC<SimplePostDialogProps> = ({post}) => {\r\n    return (<div className=\"post-dialog\">\r\n        <div className=\"post-dialog__header\">\r\n            <div className=\"post-dialog__author\">\r\n                <Avatar alt={post.author.name} src={post.author.avatar_url} className=\"post-dialog__header__author__avatar\" />\r\n                <Link to={`/profile/${post.author.id}`} className=\"post__username simple-post-user\">{post.author.name}</Link>\r\n            </div>\r\n            <></>\r\n        </div>\r\n        <img src={post.img_url} alt={post.img_url} />\r\n        <section className=\"post-dialog__content\">\r\n        <p className=\"post-dialog__likes\">Likes: {post.likes_count}</p>\r\n        <div className='post__description'><Link to={`/profile/${post.author.id}`} className=\"post__username post__username--author\">{post.author.name}</Link>\r\n            {post.description}</div>\r\n        </section>\r\n\r\n    </div>);\r\n}","import React, {useState} from 'react';\r\nimport {PostModel} from \"../models/PostModel\";\r\nimport {PostDialog} from \"./PostDialog\";\r\nimport {Modal} from \"./Modal\";\r\nimport { useSelector } from 'react-redux';\r\nimport {RootState} from \"../store\";\r\nimport {SimplePostDialog} from \"./SimplePostDialog\";\r\n\r\ninterface ProfilePostProps {\r\n    post: PostModel\r\n    searchActive: boolean;\r\n}\r\n\r\nconst ProfilePost: React.FC<ProfilePostProps> = ({ post , searchActive}) => {\r\n    const [open, setOpen] = useState(false);\r\n    const { user } = useSelector((state: RootState) => state.userReducer);\r\n\r\n    const toggle = () => {\r\n        setOpen(!open);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"profile-posts-item\" onClick={toggle}>\r\n            <img className=\"profile-posts-item-image\" src={post.img_url} alt=\"xd\"/>\r\n            <div className=\"profile-posts-item-overlay\">\r\n                <div className=\"profile-posts-item-overlay-container\">\r\n                    <div className=\"profile-posts-item-overlay-icon\">\r\n                        <i className=\"fas fa-comment\"/>\r\n                        <p>{post.comments_count}</p>\r\n                    </div>\r\n                    <div className=\"profile-posts-item-overlay-icon\">\r\n                        <i className=\"fas fa-heart\"/>\r\n                        <p>{post.likes_count}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            <Modal children={searchActive ? <SimplePostDialog post={post}/> : <PostDialog post={post} user={user!} isOnWall={false}/>} open={open} setOpen={setOpen} fullWidth={true} maxWidth=\"sm\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfilePost;\r\n","import React, {useState} from 'react';\r\nimport {PasswordInput} from \"./PasswordInput\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {FormProvider, useForm} from \"react-hook-form\";\r\nimport {passwordResetData} from \"../models/Authentication\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport {passwordSchema, signUpSchema} from \"../pages/auth/ValidationSchema\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {passwordReset} from \"store/actions/authActions\";\r\n\r\ninterface ResetPasswordDialogProps {\r\n\r\n}\r\n\r\nexport const ResetPasswordDialog: React.FC<ResetPasswordDialogProps> = () => {\r\n    const methods = useForm<passwordResetData>({\r\n        resolver: yupResolver(passwordSchema),\r\n    });\r\n    const [password, confirmedPassword] = methods.watch(['password' ,'password_confirmation']);\r\n    const action = useDispatch();\r\n\r\n    const onSubmit = (data: passwordResetData) => {\r\n        console.log(\"ebeebe\");\r\n        action(passwordReset(data));\r\n    };\r\n\r\n  return (\r\n       <section className=\"reset\">\r\n           <h1>Change your password</h1>\r\n           <FormProvider {...methods}>\r\n               <form\r\n                   onSubmit={methods.handleSubmit(onSubmit)}\r\n                   className=\"reset__form reset__form--edit-password\"\r\n               >\r\n\r\n                   <PasswordInput label=\"New password\" name=\"password\" variant=\"outlined\" />\r\n                   <PasswordInput\r\n                       label=\"Confirm Password\"\r\n                       name=\"password_confirmation\"\r\n                       variant=\"outlined\"\r\n                   />\r\n                   {password !== undefined && password === confirmedPassword ? <Button type=\"submit\" variant=\"contained\">\r\n                       Change password\r\n                   </Button> : <Button type=\"submit\" variant=\"contained\" disabled >\r\n                       Change password\r\n                   </Button>}\r\n\r\n               </form>\r\n           </FormProvider>\r\n       </section>\r\n  );\r\n }","import React, {ChangeEvent, useState} from 'react';\r\nimport Button from \"@mui/material/Button\";\r\nimport Avatar from '@mui/material/Avatar';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"store\";\r\nimport {changeUsername, setAvatar} from \"../../store/actions/authActions\";\r\nimport {TextField} from \"@mui/material\";\r\nimport imageCompression from 'browser-image-compression';\r\n\r\ninterface EditProfileProps {\r\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nexport const EditProfile: React.FC<EditProfileProps> = ({setOpen}) => {\r\n    const action = useDispatch();\r\n    const {user} = useSelector((state: RootState) => state.auth);\r\n    const [username, setUsername] = useState(\"\");\r\n\r\n    const handleSubmit = (event: React.FormEvent) => {\r\n        action(changeUsername(username));\r\n        setOpen(false);\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setUsername(event.target.value);\r\n    }\r\n\r\n    const changeAvatar = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const options = {\r\n            maxWidthOrHeight: 100,\r\n            useWebWorker: true\r\n        }\r\n        event.target.files && imageCompression(event.target.files[0], options).then((compressedFile) => {\r\n            event.target.files && (action(setAvatar(compressedFile)));\r\n        }).catch((error) => console.log(error))\r\n\r\n    }\r\n  return (\r\n   <div className=\"edit-profile\">\r\n    <h1>Edit profile</h1>\r\n       <div className=\"edit-profile__header\">\r\n           <Avatar alt={user!.name} src={user?.avatar_url} sx={{ width: 56, height: 56 }}/>\r\n           <div className=\"edit-profile__user-info\">\r\n               <p className=\"edit-profile__username\">{user?.name}</p>\r\n               <label className=\"edit-profile__clickable-text\">\r\n                   <input type=\"file\" accept=\"image/png, image/jpeg\" onChange={changeAvatar}/>\r\n                   Change avatar\r\n               </label>\r\n           </div>\r\n       </div>\r\n       <section>\r\n               <form\r\n                   onSubmit={handleSubmit}\r\n                   className=\"reset__form reset__form--edit-profile\"\r\n               >\r\n                   <TextField label=\"Username\" name=\"username\" placeholder={user!.name} type=\"text\" variant=\"outlined\" onChange={handleChange}/>\r\n                   <Button type=\"submit\" variant=\"contained\">\r\n                       Edit username\r\n                   </Button>\r\n               </form>\r\n       </section>\r\n   </div>\r\n  );\r\n }","import React, {useEffect, useState} from 'react';\r\nimport axios from \"../../utils/axiosInstance\";\r\nimport {User} from \"../../models/UserModel\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport {Link} from 'react-router-dom';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\n\r\ninterface FollowListDialogProps{\r\n    id: number\r\n    path: 'followed' | 'followers';\r\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst FollowListDialog: React.FC<FollowListDialogProps> = ({id, path, setOpen}) => {\r\n\r\n    const [users, setUsers] = useState<null | User[]>(null);\r\n\r\n    async function fetchData() {\r\n        await axios.get(`./users/${id}/${path}`, {\r\n            headers: {\r\n            Accept: \"application/json\",\r\n        }}).then((response) => {\r\n            const users = response.data.data as User[];\r\n            setUsers(users);\r\n            }\r\n        ).catch(error => console.log(error));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n\r\n        return () => {\r\n            setOpen(false);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <section className=\"follow-dialog\">\r\n            <h1>{path.charAt(0).toUpperCase() + path.slice(1)}</h1>\r\n            <article className=\"follow-dialog__users\">\r\n                {users ? users.map(user => (\r\n                    <section key={user.id} className=\"follow-dialog__user\">\r\n\r\n                        <div className=\"follow-dialog__avatar\">\r\n                            <Link to={`/profile/${user.id}`}><Avatar\r\n                                alt={user.name}\r\n                                src={user.avatar_url}\r\n                                sx={{ width: 30, height: 30 }}\r\n\r\n                            /></Link>\r\n                        </div>\r\n                        <Link to={`/profile/${user.id}`}>{user.name}</Link>\r\n                    </section>\r\n                )) : <section className=\"follow-dialog__loading\">\r\n                    <CircularProgress />\r\n                </section>}\r\n            </article>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default FollowListDialog;\r\n","import React, {useEffect, useState} from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from \"@mui/material/Button\";\r\nimport {signOut} from \"store/actions/authActions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {DrawerComponent} from \"../../components/DrawerComponent\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport {RootState} from \"../../store\";\r\nimport {PostModel} from 'models/PostModel';\r\nimport ProfilePost from \"../../components/ProfilePost\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport {Modal} from \"../../components/Modal\";\r\nimport {ResetPasswordDialog} from \"../../components/ResetPasswordDialog\";\r\nimport {EditProfile} from \"./EditProfile\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {followUser, getUserById, getUserPosts, setLoadingUser} from \"../../store/actions/userActions\";\r\nimport FollowListDialog from \"./FollowListDialog\";\r\nimport {setPosts} from \"../../store/actions/postAction\";\r\n\r\ninterface ProfileProps {\r\n\r\n}\r\n\r\ntype Path = 'followers' | 'followed';\r\n\r\nexport const Profile: React.FC<ProfileProps> = () => {\r\n    const action = useDispatch();\r\n    const loggedUserId = useSelector((state: RootState) => state.auth.user!.id);\r\n    const { user, userLoading, posts, currentPage, hasNextPage } = useSelector((state: RootState) => state.userReducer);\r\n    const { id } = useParams<string>();\r\n    const [open, setOpen] = useState(false);\r\n    const [openEditProfile, setOpenEditProfile] = useState(false);\r\n    const [followOpen, setFollowOpen] = useState(false);\r\n    const [path, setPath] = useState<Path>('followers');\r\n\r\n    useEffect(() => {\r\n        action(setLoadingUser(true));\r\n        action(getUserById(Number(id)));\r\n        action(getUserPosts(Number(id), [], 1));\r\n    }, [id]);\r\n\r\n    const handleLoadClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n        hasNextPage && action(getUserPosts(user!.id, posts!, currentPage+1));\r\n    }\r\n\r\n\r\n    const handleClick = () => {\r\n        action(signOut());\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleOpenEditProfile = () => {\r\n        setOpenEditProfile(true);\r\n    }\r\n\r\n    const handleFollow = () => {\r\n        user && action(followUser(user));\r\n    }\r\n\r\n    const handleFollowOpen = (passedPath: Path) =>{\r\n        if( user &&\r\n            ((user.followers_count > 0 && passedPath === 'followers')\r\n            || (user.followed_count > 0 && passedPath === 'followed'))){\r\n            setPath(passedPath);\r\n            setFollowOpen(true);\r\n        }\r\n    }\r\n\r\n    const list = () => {\r\n        return (<List>\r\n            <ListItem button>\r\n            <ListItemIcon><i className=\"fas fa-cog\" /></ListItemIcon>\r\n            <ListItemText onClick={handleOpen}>Change password</ListItemText>\r\n        </ListItem>\r\n            <ListItem button>\r\n                <ListItemIcon><i className=\"fas fa-sign-out-alt\" /></ListItemIcon>\r\n                <ListItemText onClick={handleClick}>Sign Out</ListItemText>\r\n            </ListItem>\r\n            <ListItem button>\r\n                <ListItemIcon><i className=\"far fa-times-circle\"/></ListItemIcon>\r\n                <ListItemText>Cancel</ListItemText>\r\n            </ListItem>\r\n        </List>);\r\n    };\r\n\r\n    const buttons = () => {\r\n        if(loggedUserId === Number(id)){\r\n            return (<div className=\"profile-buttons\">\r\n                <Button variant=\"outlined\" onClick={handleOpenEditProfile}>Edit profile</Button>\r\n                <DrawerComponent list={list()} drawerTitle=\"Settings\"/>\r\n            </div>)\r\n        }\r\n        else{\r\n            return (<div className=\"profile-buttons\">\r\n                {user?.isFollowed ? <Button variant=\"outlined\" onClick={handleFollow}>Unfollow</Button> : <Button variant=\"outlined\" onClick={handleFollow}>Follow</Button>}\r\n            </div>)\r\n        }\r\n    }\r\n\r\n\r\n    if(userLoading){\r\n        return <div className=\"home-wrapper\">\r\n            <CircularProgress size={40} />\r\n        </div>\r\n    }\r\n  return (\r\n   <div className=\"profile-wrapper\">\r\n    <div className=\"profile-header\">\r\n        <Avatar\r\n            alt={user?.name}\r\n            src={user?.avatar_url}\r\n            sx={{ width: 70, height: 70 }}\r\n        />\r\n        <div className=\"profile-header-right\">\r\n            {user && <p>{user!.name}</p>}\r\n            <div className=\"profile-statistics-container\">\r\n                <div className=\"profile-statistics\">\r\n                    <p className=\"profile-statistics-number\">{user?.posts_count}</p>\r\n                    <p>Posts</p>\r\n                </div>\r\n                <div className=\"profile-statistics\" onClick={() => handleFollowOpen('followers')}>\r\n                    <p className=\"profile-statistics-number\">{user?.followers_count}</p>\r\n                    <p>Followers</p>\r\n                </div>\r\n                <div className=\"profile-statistics\" onClick={() => handleFollowOpen('followed')}>\r\n                    <p className=\"profile-statistics-number\">{user?.followed_count}</p>\r\n                    <p>Following</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n       <div className=\"profile-buttons\">\r\n           {buttons()}\r\n       </div>\r\n       <div className=\"profile-posts\">\r\n           {posts && posts.map((post:PostModel) =>\r\n               <ProfilePost post={post} key={post.id} searchActive={false}/>\r\n           )}\r\n       </div>\r\n        <Modal open={open} setOpen={setOpen} children={<ResetPasswordDialog />}/>\r\n        <Modal open={openEditProfile} setOpen={setOpenEditProfile} children={<EditProfile setOpen={setOpenEditProfile} />}/>\r\n       {user &&\r\n           <Modal open={followOpen} setOpen={setFollowOpen} scrollType='paper'\r\n                  children={<FollowListDialog id={user.id} path={path} setOpen={setFollowOpen} />}\r\n       />}\r\n       {hasNextPage && <Button onClick={handleLoadClick}>Load more posts...</Button>}\r\n   </div>\r\n  );\r\n }","import * as React from 'react';\r\nimport {useState} from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport {PostModel} from \"../../models/PostModel\";\r\nimport {User} from '../../models/UserModel'\r\nimport axios from \"utils/axiosInstance\";\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ProfilePost from \"../../components/ProfilePost\";\r\nimport {useDebouncedCallback} from 'use-debounce';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n\r\ninterface SearchProps {\r\n\r\n}\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: number;\r\n    value: number;\r\n}\r\nconst TabPanel = (props: TabPanelProps) => {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <div>{children}</div>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nexport const Search: React.FC<SearchProps> = () => {\r\n    const [value, setValue] = useState(0);\r\n    const [posts, setPosts] = useState<PostModel[] | null>(null);\r\n    const [users, setUsers] = useState<User[] | null>(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const debounced = useDebouncedCallback(\r\n        (searchValue) => {\r\n            if(searchValue.length >= 4){\r\n                setLoading(true);\r\n                console.log(searchValue);\r\n                axios.get('/search', {\r\n                    params: {\r\n                        'user': searchValue,\r\n                        'post': searchValue,\r\n                    },\r\n                    headers: {\r\n                        Accept: 'application/json'\r\n                    }\r\n                }).then((response) => {\r\n                    console.log(response);\r\n                    const foundUsers = response.data.data.users;\r\n                    const foundPosts = response.data.data.posts;\r\n\r\n                    setUsers(foundUsers);\r\n                    setPosts(foundPosts);\r\n                    setLoading(false);\r\n                }).catch(error => console.log(error));\r\n            }\r\n        },\r\n        // delay in ms\r\n        1000\r\n    );\r\n\r\n    const handleChangeTab = (event: React.SyntheticEvent, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n   <div className=\"search\">\r\n       <div className=\"search__input\">\r\n           <TextField\r\n               fullWidth\r\n               placeholder=\"Search\"\r\n               onChange={(e) => debounced(e.target.value)}\r\n               variant=\"standard\"\r\n               InputProps={{\r\n                   startAdornment: (\r\n                       <InputAdornment position=\"start\">\r\n                           <i className=\"fas fa-search\" />\r\n                       </InputAdornment>\r\n                   ),\r\n               }}\r\n           />\r\n       </div>\r\n       <div className=\"search__content\">\r\n\r\n           <Box sx={{ width: '100%' }}>\r\n               <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                   <Tabs value={value} onChange={handleChangeTab}>\r\n                       <Tab label=\"Users\" />\r\n                       <Tab label=\"Posts\" />\r\n                   </Tabs>\r\n               </Box>\r\n               <TabPanel value={value} index={0}>\r\n                   {loading ? <div className=\"search__loading\"><CircularProgress size={40} /></div> : users && users.map((user) => (\r\n                       <section key={user.id} className=\"follow-dialog__user\">\r\n\r\n                           <div className=\"follow-dialog__avatar\">\r\n                               <Link to={`/profile/${user.id}`}><Avatar\r\n                                   alt={user.name}\r\n                                   src={user.avatar_url}\r\n                                   sx={{ width: 30, height: 30 }}\r\n\r\n                               /></Link>\r\n                           </div>\r\n                           <Link to={`/profile/${user.id}`}>{user.name}</Link>\r\n                       </section>\r\n                   ))}\r\n               </TabPanel>\r\n               <TabPanel value={value} index={1}>\r\n                   {loading ? <div className=\"search__loading\"><CircularProgress size={40} /></div> : posts && <div className=\"profile-posts\">{posts.map((post) => (\r\n                       <ProfilePost post={post} key={post.id} searchActive={true}/>\r\n                   ))}</div>}\r\n               </TabPanel>\r\n           </Box>\r\n       </div>\r\n\r\n   </div>\r\n  );\r\n }","import React from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport Button from '@mui/material/Button';\r\n\r\ninterface DropzoneProps {\r\n    setFile: React.Dispatch<React.SetStateAction<File | null>>;\r\n}\r\n\r\n\r\nexport const Dropzone: React.FC<DropzoneProps> = ({setFile}) => {\r\n    const onDrop = (acceptedFiles: File[]) => {\r\n        acceptedFiles.forEach((file) => {\r\n            console.log(file)\r\n            setFile(file);\r\n        });\r\n    };\r\n\r\n    const {\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject\r\n    } = useDropzone({onDrop, accept: 'image/png, image/jpg, image/jpeg', multiple: false,\r\n        maxFiles: 1,});\r\n\r\n    const test = () => {\r\n        if(isDragReject){\r\n            return 'icon--drag-reject';\r\n        }\r\n        if(isDragAccept){\r\n            return 'icon--drag-accept';\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div {...getRootProps()} className=\"dropzone\">\r\n                <input {...getInputProps()}/>\r\n                <i className={`far fa-images icon ${test()}`} />\r\n                {isDragAccept && (<p className=\"dropzone__info\">File will be accepted</p>)}\r\n                {isDragReject && (<p className=\"dropzone__info\">File will be rejected</p>)}\r\n                {!isDragActive && (<p className=\"dropzone__info\">Drop photo here</p>)}\r\n                <Button variant=\"contained\">Choose from device</Button>\r\n\r\n            </div>\r\n    );\r\n}","import React, {useEffect, ChangeEvent} from 'react'\r\nimport TextField from '@mui/material/TextField';\r\nimport {AddPostModel} from 'models/PostModel';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\n\r\ninterface PostFormProps {\r\n    setPost: React.Dispatch<React.SetStateAction<AddPostModel>>;\r\n    post: AddPostModel;\r\n    file: File | null;\r\n}\r\n\r\nexport const PostForm: React.FC<PostFormProps> = ({setPost, post, file}) => {\r\n    const { user } = useSelector((state: RootState) => state.auth);\r\n    const handleChange = (event:  ChangeEvent<HTMLInputElement>) => {\r\n        setPost({\r\n            ...post,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        setPost({\r\n            ...post,\r\n            photo: file\r\n        })\r\n    }, [file])\r\n\r\n    return (\r\n        <main className='post-form'>\r\n            <img src={URL.createObjectURL(file)} alt=\"editImage\" className=\"add-post__image\"/>\r\n            <div className=\"post-form__user-info\">\r\n                <Avatar alt=\"xd\" src={user?.avatar_url} />\r\n                <p>{user!.name}</p>\r\n            </div>\r\n            <div className=\"post-form__inputs\">\r\n\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Add description\"\r\n                    multiline\r\n                    maxRows={4}\r\n                    value={post?.description}\r\n                    onChange={handleChange}\r\n                    name='description'\r\n                    className='post-form__input'\r\n                />\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Tags\"\r\n                    placeholder=\"#Tag #Tag #Tag\"\r\n                    value={post?.tags}\r\n                    onChange={handleChange}\r\n                    name='tags'\r\n                    className='post-form__input'\r\n                />\r\n            </div>\r\n        </main>\r\n    );\r\n}","import * as React from 'react';\r\nimport {useEffect, useState} from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport {Dropzone} from \"../../components/Dropzone\";\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport {PostForm} from \"./PostForm\";\r\nimport {AddPostModel} from 'models/PostModel';\r\nimport axios from \"../../utils/axiosInstance\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../store\";\r\nimport {setLoadingPost} from \"../../store/actions/postAction\";\r\nimport imageCompression from 'browser-image-compression';\r\nimport {setLoadingAuth} from \"../../store/actions/authActions\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport {setLoadingUser} from \"../../store/actions/userActions\";\r\n\r\n\r\ninterface AddPostProps {\r\n}\r\n\r\nconst steps = ['Add image', 'Create post'];\r\n\r\nexport const AddPost: React.FC<AddPostProps> = () => {\r\n    const { user } = useSelector((state: RootState) => state.auth);\r\n    const { userLoading } = useSelector((state: RootState) => state.userReducer);\r\n\r\n    const [file, setFile] = useState<File | null>(null);\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [post, setPost] = useState<AddPostModel>({\r\n        photo: null,\r\n        description: '',\r\n        tags: ''\r\n    });\r\n    const action = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n    }, [file, post]);\r\n\r\n    const handleOpen = () => {\r\n        setIsOpen(true);\r\n    }\r\n\r\n\r\n    const stepsElements = [\r\n        {\r\n             htmlElement: !file ? <Dropzone setFile={setFile}/> : <img src={URL.createObjectURL(file)} alt=\"post\" onClick={handleOpen} className=\"add-post__image\"/>\r\n        },\r\n        {\r\n            htmlElement: <PostForm setPost={setPost} post={post} file={file}/>\r\n        }\r\n    ]\r\n    const handleNext = () => {setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    const removeImage = () => {\r\n        setFile(null);\r\n    }\r\n\r\n    const handleAddPost = async () => {\r\n        action(setLoadingUser(true));\r\n        const fData = new FormData();\r\n        const options = {\r\n            maxSizeMB: 1,\r\n            maxWidthOrHeight: 1920,\r\n            useWebWorker: true\r\n        }\r\n        file && imageCompression(file, options)\r\n            .then((compressedFile) => {\r\n                console.log(compressedFile);\r\n                fData.append('photo', compressedFile);\r\n                post.description && fData.append('description', post.description);\r\n                post.tags && fData.append('tags', post.tags);\r\n\r\n                axios.post(`./posts`,\r\n                    fData,\r\n                    {\r\n                        headers: {\r\n                            'Content-Type': 'multipart/form-data'\r\n                        }\r\n                    }\r\n                ).then((res) => {\r\n                    console.log(res.data);\r\n                    navigate(`/profile/${user!.id}`);\r\n                    action(setLoadingUser(false));\r\n                }).catch((error) => console.log(error))\r\n            }).catch((error) => console.log(error))\r\n        console.log(post.photo);\r\n    }\r\n\r\n    if(userLoading){\r\n        return <div className=\"add-post__loading\"><CircularProgress size={40} /></div>\r\n    }\r\n\r\n    return (\r\n        <main className='add-post'>\r\n            <Box sx={{width: '100%'}}>\r\n            <Stepper activeStep={activeStep} alternativeLabel>\r\n                {steps.map((label, index) => {\r\n                    const stepProps: { completed?: boolean } = {};\r\n                    const labelProps: {\r\n                        optional?: React.ReactNode;\r\n                    } = {};\r\n                    return (\r\n                        <Step key={label} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n            {activeStep === steps.length ? (\r\n                <React.Fragment>\r\n                    <Typography sx={{ mt: 2, mb: 1 }}>\r\n                        All steps completed - you&apos;re finished\r\n                    </Typography>\r\n                    <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n                        <Box sx={{ flex: '1 1 auto' }} />\r\n                        <Button onClick={handleReset}>Reset</Button>\r\n                    </Box>\r\n                </React.Fragment>\r\n            ) : (\r\n                <React.Fragment>\r\n                    {/*{post.photo && <img src={URL.createObjectURL(post.photo)} alt=\"post\" />}*/}\r\n                    {/*{isEditMode && post.photo ? <img src={URL.createObjectURL(post.photo)} alt=\"post\" /> : stepsElements[activeStep].htmlElement}*/}\r\n                    {stepsElements[activeStep].htmlElement}\r\n                    <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n                        <Button\r\n                            color=\"inherit\"\r\n                            disabled={!file && activeStep === 0}\r\n                            onClick={activeStep === steps.length - 1 ? handleBack : removeImage}\r\n                            sx={{ mr: 1 }}\r\n                        >\r\n                            {activeStep === steps.length - 1 ? 'Back' : 'Remove photo'}\r\n                        </Button>\r\n                        <Box sx={{ flex: '1 1 auto' }} />\r\n                        <Button onClick={activeStep === steps.length - 1 ? handleAddPost : handleNext} disabled={!file}>\r\n                            {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                        </Button>\r\n                    </Box>\r\n                </React.Fragment>\r\n            )}\r\n            </Box>\r\n        </main>\r\n    );\r\n}","import React, {ChangeEvent, useEffect, useState} from 'react'\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\nimport axios from \"utils/axiosInstance\";\r\nimport {PostModel} from \"../../models/PostModel\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\ninterface EditPostProps {\r\n\r\n}\r\n\r\nexport const EditPost: React.FC<EditPostProps> = ({}) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [post, setPost] = useState<PostModel | null>(null);\r\n    const { state } = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        let unmounted = false;\r\n        axios.get(`./posts/${state.id}`).then((response) => {\r\n            if(!unmounted){\r\n                setPost(response.data.data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n\r\n        return () => {\r\n            unmounted = true;\r\n        };\r\n    }, []);\r\n\r\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        post && setPost({\r\n            ...post,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        axios.put(`./posts/${state.id}`, post).then(() => {\r\n            navigate(`/profile/${post?.author_id}`);\r\n        }).catch((error) => console.log(error));\r\n    }\r\n\r\n\r\n\r\n    if(loading){\r\n        return <CircularProgress size={40} />\r\n    }\r\n\r\n    return (<main className=\"edit-post\">\r\n        <h2>Edit post</h2>\r\n        <img src={post?.img_url} alt={post?.img_url}/>\r\n        <div className=\"edit-post__form\">\r\n            <TextField\r\n                fullWidth\r\n                label=\"Add description\"\r\n                multiline\r\n                maxRows={4}\r\n                value={post!.description ? post?.description : \"\"}\r\n                name='description'\r\n                className='edit-post__input'\r\n                onChange={handleChange}\r\n            />\r\n            <TextField\r\n                fullWidth\r\n                label=\"Tags\"\r\n                placeholder=\"#Tag #Tag #Tag\"\r\n                value={post!.tags ? post?.tags : \"\"}\r\n                name='tags'\r\n                className='edit-post__input'\r\n                onChange={handleChange}\r\n            />\r\n\r\n            <Button onClick={handleSubmit} variant=\"contained\">Save changes</Button>\r\n        </div>\r\n\r\n    </main>);\r\n}","import \"App.scss\";\r\nimport { Navbar } from \"components/Navbar\";\r\nimport { SignIn } from \"pages/auth/SignIn\";\r\nimport { SignUp } from \"pages/auth/SignUp\";\r\nimport { Home } from \"pages/home/Home\";\r\nimport React, { useEffect } from \"react\";\r\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\r\nimport { ProtectedRoute } from \"./ProtectedRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { RootState } from \"store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { BottomNavbar } from \"../components/BottomNavbar\";\r\nimport { Profile } from \"../pages/profile/Profile\";\r\nimport { Search } from \"pages/search/search\";\r\nimport {AddPost} from \"../pages/addPost/AddPost\";\r\nimport {EditPost} from \"../pages/editPost/editPost\";\r\n\r\ninterface RoutesProps {}\r\n\r\nexport const RoutesConfig: React.FC<RoutesProps> = () => {\r\n  const { authenticated } = useSelector((state: RootState) => state.auth);\r\n\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <HashRouter>\r\n      <Navbar />\r\n      <div className=\"content-wrapper\">\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <PublicRoute>\r\n                  <SignUp />\r\n              </PublicRoute>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/signup\"\r\n            element={\r\n              <PublicRoute>\r\n                <SignUp />\r\n              </PublicRoute>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/signin\"\r\n            element={\r\n              <PublicRoute>\r\n                <SignIn />\r\n              </PublicRoute>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/home\"\r\n            element={\r\n              <ProtectedRoute>\r\n                <Home />\r\n              </ProtectedRoute>\r\n            }\r\n          />\r\n            <Route\r\n                path=\"/profile/:id\"\r\n                element={\r\n                    <ProtectedRoute>\r\n                        <Profile />\r\n                    </ProtectedRoute>\r\n                }\r\n            />\r\n            <Route\r\n                path=\"/search\"\r\n                element={\r\n                    <ProtectedRoute>\r\n                        <Search />\r\n                    </ProtectedRoute>\r\n                }\r\n            />\r\n            <Route\r\n                path=\"/addPost\"\r\n                element={\r\n                    <ProtectedRoute>\r\n                        <AddPost />\r\n                    </ProtectedRoute>\r\n                }\r\n            />\r\n            <Route\r\n                path=\"/editPost\"\r\n                element={\r\n                    <ProtectedRoute>\r\n                        <EditPost/>\r\n                    </ProtectedRoute>\r\n                }\r\n            />\r\n\r\n\r\n        </Routes>\r\n      </div>\r\n        {authenticated && <BottomNavbar />}\r\n    </HashRouter>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { RoutesConfig } from \"routes/RoutesConfig\";\nimport { store, persistor } from \"./store\";\nimport \"./App.scss\";\nimport \"./styles/global.scss\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <RoutesConfig />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}